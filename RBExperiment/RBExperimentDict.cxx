//
// File generated by rootcint at Wed Apr 18 17:37:48 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME RBExperimentDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "RBExperimentDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void RBNSCLBufferHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RBNSCLBufferHeader(void *p = 0);
   static void *newArray_RBNSCLBufferHeader(Long_t size, void *p);
   static void delete_RBNSCLBufferHeader(void *p);
   static void deleteArray_RBNSCLBufferHeader(void *p);
   static void destruct_RBNSCLBufferHeader(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RBNSCLBufferHeader*)
   {
      ::RBNSCLBufferHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RBNSCLBufferHeader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RBNSCLBufferHeader", ::RBNSCLBufferHeader::Class_Version(), "RBNSCLBufferHeader.h", 20,
                  typeid(::RBNSCLBufferHeader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RBNSCLBufferHeader::Dictionary, isa_proxy, 4,
                  sizeof(::RBNSCLBufferHeader) );
      instance.SetNew(&new_RBNSCLBufferHeader);
      instance.SetNewArray(&newArray_RBNSCLBufferHeader);
      instance.SetDelete(&delete_RBNSCLBufferHeader);
      instance.SetDeleteArray(&deleteArray_RBNSCLBufferHeader);
      instance.SetDestructor(&destruct_RBNSCLBufferHeader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RBNSCLBufferHeader*)
   {
      return GenerateInitInstanceLocal((::RBNSCLBufferHeader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RBNSCLBufferHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RBRingItem_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RBRingItem(void *p = 0);
   static void *newArray_RBRingItem(Long_t size, void *p);
   static void delete_RBRingItem(void *p);
   static void deleteArray_RBRingItem(void *p);
   static void destruct_RBRingItem(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RBRingItem*)
   {
      ::RBRingItem *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RBRingItem >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RBRingItem", ::RBRingItem::Class_Version(), "RBRingItem.h", 20,
                  typeid(::RBRingItem), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RBRingItem::Dictionary, isa_proxy, 4,
                  sizeof(::RBRingItem) );
      instance.SetNew(&new_RBRingItem);
      instance.SetNewArray(&newArray_RBRingItem);
      instance.SetDelete(&delete_RBRingItem);
      instance.SetDeleteArray(&deleteArray_RBRingItem);
      instance.SetDestructor(&destruct_RBRingItem);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RBRingItem*)
   {
      return GenerateInitInstanceLocal((::RBRingItem*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RBRingItem*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RBRingStateChangeItem_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RBRingStateChangeItem(void *p = 0);
   static void *newArray_RBRingStateChangeItem(Long_t size, void *p);
   static void delete_RBRingStateChangeItem(void *p);
   static void deleteArray_RBRingStateChangeItem(void *p);
   static void destruct_RBRingStateChangeItem(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RBRingStateChangeItem*)
   {
      ::RBRingStateChangeItem *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RBRingStateChangeItem >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RBRingStateChangeItem", ::RBRingStateChangeItem::Class_Version(), "RBRingStateChangeItem.h", 24,
                  typeid(::RBRingStateChangeItem), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RBRingStateChangeItem::Dictionary, isa_proxy, 4,
                  sizeof(::RBRingStateChangeItem) );
      instance.SetNew(&new_RBRingStateChangeItem);
      instance.SetNewArray(&newArray_RBRingStateChangeItem);
      instance.SetDelete(&delete_RBRingStateChangeItem);
      instance.SetDeleteArray(&deleteArray_RBRingStateChangeItem);
      instance.SetDestructor(&destruct_RBRingStateChangeItem);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RBRingStateChangeItem*)
   {
      return GenerateInitInstanceLocal((::RBRingStateChangeItem*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RBRingStateChangeItem*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RBExperiment_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RBExperiment(void *p = 0);
   static void *newArray_RBExperiment(Long_t size, void *p);
   static void delete_RBExperiment(void *p);
   static void deleteArray_RBExperiment(void *p);
   static void destruct_RBExperiment(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RBExperiment*)
   {
      ::RBExperiment *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RBExperiment >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RBExperiment", ::RBExperiment::Class_Version(), "./RBExperiment.h", 36,
                  typeid(::RBExperiment), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RBExperiment::Dictionary, isa_proxy, 4,
                  sizeof(::RBExperiment) );
      instance.SetNew(&new_RBExperiment);
      instance.SetNewArray(&newArray_RBExperiment);
      instance.SetDelete(&delete_RBExperiment);
      instance.SetDeleteArray(&deleteArray_RBExperiment);
      instance.SetDestructor(&destruct_RBExperiment);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RBExperiment*)
   {
      return GenerateInitInstanceLocal((::RBExperiment*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RBExperiment*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr RBNSCLBufferHeader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RBNSCLBufferHeader::Class_Name()
{
   return "RBNSCLBufferHeader";
}

//______________________________________________________________________________
const char *RBNSCLBufferHeader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBNSCLBufferHeader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RBNSCLBufferHeader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBNSCLBufferHeader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RBNSCLBufferHeader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBNSCLBufferHeader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RBNSCLBufferHeader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBNSCLBufferHeader*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RBRingItem::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RBRingItem::Class_Name()
{
   return "RBRingItem";
}

//______________________________________________________________________________
const char *RBRingItem::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBRingItem*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RBRingItem::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBRingItem*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RBRingItem::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBRingItem*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RBRingItem::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBRingItem*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RBRingStateChangeItem::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RBRingStateChangeItem::Class_Name()
{
   return "RBRingStateChangeItem";
}

//______________________________________________________________________________
const char *RBRingStateChangeItem::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBRingStateChangeItem*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RBRingStateChangeItem::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBRingStateChangeItem*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RBRingStateChangeItem::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBRingStateChangeItem*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RBRingStateChangeItem::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBRingStateChangeItem*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RBExperiment::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RBExperiment::Class_Name()
{
   return "RBExperiment";
}

//______________________________________________________________________________
const char *RBExperiment::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBExperiment*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RBExperiment::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBExperiment*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RBExperiment::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBExperiment*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RBExperiment::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBExperiment*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void RBRingItem::Streamer(TBuffer &R__b)
{
   // Stream an object of class RBRingItem.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RBRingItem::Class(),this);
   } else {
      R__b.WriteClassBuffer(RBRingItem::Class(),this);
   }
}

//______________________________________________________________________________
void RBRingItem::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RBRingItem.
      TClass *R__cl = ::RBRingItem::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimestamp", &fTimestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourceId", &fSourceId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBarrierType", &fBarrierType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxBody", &fMaxBody);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Type", &b_Type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Timestamp", &b_Timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_SourceId", &b_SourceId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_BarrierType", &b_BarrierType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_MaxBody", &b_MaxBody);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RBRingItem(void *p) {
      return  p ? new(p) ::RBRingItem : new ::RBRingItem;
   }
   static void *newArray_RBRingItem(Long_t nElements, void *p) {
      return p ? new(p) ::RBRingItem[nElements] : new ::RBRingItem[nElements];
   }
   // Wrapper around operator delete
   static void delete_RBRingItem(void *p) {
      delete ((::RBRingItem*)p);
   }
   static void deleteArray_RBRingItem(void *p) {
      delete [] ((::RBRingItem*)p);
   }
   static void destruct_RBRingItem(void *p) {
      typedef ::RBRingItem current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RBRingItem

//______________________________________________________________________________
void RBRingStateChangeItem::Streamer(TBuffer &R__b)
{
   // Stream an object of class RBRingStateChangeItem.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RBRingStateChangeItem::Class(),this);
   } else {
      R__b.WriteClassBuffer(RBRingStateChangeItem::Class(),this);
   }
}

//______________________________________________________________________________
void RBRingStateChangeItem::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RBRingStateChangeItem.
      TClass *R__cl = ::RBRingStateChangeItem::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReason", &fReason);
      R__insp.InspectMember(fReason, "fReason.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeOffset", &fTimeOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimestamp", &fTimestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunTitle", &fRunTitle);
      R__insp.InspectMember(fRunTitle, "fRunTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      RBRingItem::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RBRingStateChangeItem(void *p) {
      return  p ? new(p) ::RBRingStateChangeItem : new ::RBRingStateChangeItem;
   }
   static void *newArray_RBRingStateChangeItem(Long_t nElements, void *p) {
      return p ? new(p) ::RBRingStateChangeItem[nElements] : new ::RBRingStateChangeItem[nElements];
   }
   // Wrapper around operator delete
   static void delete_RBRingStateChangeItem(void *p) {
      delete ((::RBRingStateChangeItem*)p);
   }
   static void deleteArray_RBRingStateChangeItem(void *p) {
      delete [] ((::RBRingStateChangeItem*)p);
   }
   static void destruct_RBRingStateChangeItem(void *p) {
      typedef ::RBRingStateChangeItem current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RBRingStateChangeItem

//______________________________________________________________________________
void RBNSCLBufferHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class RBNSCLBufferHeader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RBNSCLBufferHeader::Class(),this);
   } else {
      R__b.WriteClassBuffer(RBNSCLBufferHeader::Class(),this);
   }
}

//______________________________________________________________________________
void RBNSCLBufferHeader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RBNSCLBufferHeader.
      TClass *R__cl = ::RBNSCLBufferHeader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nwds", &nwds);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sequence", &sequence);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEntities", &nEntities);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_nwds", &b_nwds);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_type", &b_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sequence", &b_sequence);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_nEntities", &b_nEntities);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RBNSCLBufferHeader(void *p) {
      return  p ? new(p) ::RBNSCLBufferHeader : new ::RBNSCLBufferHeader;
   }
   static void *newArray_RBNSCLBufferHeader(Long_t nElements, void *p) {
      return p ? new(p) ::RBNSCLBufferHeader[nElements] : new ::RBNSCLBufferHeader[nElements];
   }
   // Wrapper around operator delete
   static void delete_RBNSCLBufferHeader(void *p) {
      delete ((::RBNSCLBufferHeader*)p);
   }
   static void deleteArray_RBNSCLBufferHeader(void *p) {
      delete [] ((::RBNSCLBufferHeader*)p);
   }
   static void destruct_RBNSCLBufferHeader(void *p) {
      typedef ::RBNSCLBufferHeader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RBNSCLBufferHeader

//______________________________________________________________________________
void RBExperiment::Streamer(TBuffer &R__b)
{
   // Stream an object of class RBExperiment.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RBExperiment::Class(),this);
   } else {
      R__b.WriteClassBuffer(RBExperiment::Class(),this);
   }
}

//______________________________________________________________________________
void RBExperiment::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RBExperiment.
      TClass *R__cl = ::RBExperiment::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p", &p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvtFileNumber", &fEvtFileNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvtFileSize", &fEvtFileSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnBuf2Read", &fnBuf2Read);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMergedData", &fMergedData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvtFile", (void*)&fEvtFile);
      R__insp.InspectMember("ifstream", (void*)&fEvtFile, "fEvtFile.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fROOTFile", &fROOTFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fElectronics", &fElectronics);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRootTree", &fRootTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nWords", &nWords);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "checksum", &checksum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runNum", &runNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sequence[2]", sequence);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEntities", &nEntities);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format", &format);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "entitySize", &entitySize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "subEvtSize", &subEvtSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nReadWords", &nReadWords);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "subEvtLength", &subEvtLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBuffers", &fBuffers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnTotEntities", &fnTotEntities);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnTotWords", &fnTotWords);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "counter", &counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cent", &cent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "start", &start);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "now", &now);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPauses", &fPauses);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fResumes", &fResumes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunEnd", &fRunEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBRI_Size", &fBRI_Size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBRI_Timestamp", &fBRI_Timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*expNumber", &expNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*expTitle", &expTitle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*runTitle", &runTitle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*runNumber", &runNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*evtFileNumber", &evtFileNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dateTimestamp", &dateTimestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dateBegin", &dateBegin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*timeBegin", &timeBegin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dateEnd", &dateEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*timeEnd", &timeEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*evtSize", &evtSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rootSize", &rootSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*evtFilePath", &evtFilePath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rootFilePath", &rootFilePath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RBExperiment(void *p) {
      return  p ? new(p) ::RBExperiment : new ::RBExperiment;
   }
   static void *newArray_RBExperiment(Long_t nElements, void *p) {
      return p ? new(p) ::RBExperiment[nElements] : new ::RBExperiment[nElements];
   }
   // Wrapper around operator delete
   static void delete_RBExperiment(void *p) {
      delete ((::RBExperiment*)p);
   }
   static void deleteArray_RBExperiment(void *p) {
      delete [] ((::RBExperiment*)p);
   }
   static void destruct_RBExperiment(void *p) {
      typedef ::RBExperiment current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RBExperiment

/********************************************************
* RBExperimentDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRBExperimentDict();

extern "C" void G__set_cpp_environmentRBExperimentDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("RBExperiment.h");
  G__add_compiledheader("RBRingItem.h");
  G__add_compiledheader("RBRingStateChangeItem.h");
  G__add_compiledheader("RBNSCLBufferHeader.h");
  G__cpp_reset_tagtableRBExperimentDict();
}
#include <new>
extern "C" int G__cpp_dllrevRBExperimentDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* RBNSCLBufferHeader */
static int G__RBExperimentDict_519_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBNSCLBufferHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBNSCLBufferHeader[n];
     } else {
       p = new((void*) gvp) RBNSCLBufferHeader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBNSCLBufferHeader;
     } else {
       p = new((void*) gvp) RBNSCLBufferHeader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBExperimentDictLN_RBNSCLBufferHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_519_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBNSCLBufferHeader*) G__getstructoffset())->InitClass();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_519_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBNSCLBufferHeader*) G__getstructoffset())->InitTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_519_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RBNSCLBufferHeader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_519_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBNSCLBufferHeader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_519_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RBNSCLBufferHeader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_519_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RBNSCLBufferHeader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_519_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBNSCLBufferHeader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_519_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBNSCLBufferHeader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_519_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBNSCLBufferHeader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_519_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBNSCLBufferHeader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_519_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBNSCLBufferHeader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RBExperimentDict_519_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RBNSCLBufferHeader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RBNSCLBufferHeader(*(RBNSCLBufferHeader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBExperimentDictLN_RBNSCLBufferHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RBNSCLBufferHeader G__TRBNSCLBufferHeader;
static int G__RBExperimentDict_519_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RBNSCLBufferHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RBNSCLBufferHeader*) (soff+(sizeof(RBNSCLBufferHeader)*i)))->~G__TRBNSCLBufferHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RBNSCLBufferHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RBNSCLBufferHeader*) (soff))->~G__TRBNSCLBufferHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RBExperimentDict_519_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBNSCLBufferHeader* dest = (RBNSCLBufferHeader*) G__getstructoffset();
   *dest = *(RBNSCLBufferHeader*) libp->para[0].ref;
   const RBNSCLBufferHeader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RBRingItem */
static int G__RBExperimentDict_520_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBRingItem* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBRingItem[n];
     } else {
       p = new((void*) gvp) RBRingItem[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBRingItem;
     } else {
       p = new((void*) gvp) RBRingItem;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingItem));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_520_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBRingItem* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBRingItem(
(UShort_t) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (size_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) RBRingItem(
(UShort_t) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (size_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBRingItem(
(UShort_t) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) RBRingItem(
(UShort_t) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBRingItem(
(UShort_t) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) RBRingItem(
(UShort_t) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingItem));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_520_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBRingItem*) G__getstructoffset())->SetType((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_520_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((RBRingItem*) G__getstructoffset())->SetBodyHeader((ULong64_t) G__ULonglong(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((RBRingItem*) G__getstructoffset())->SetBodyHeader((ULong64_t) G__ULonglong(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_520_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBRingItem*) G__getstructoffset())->InitClass();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_520_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBRingItem*) G__getstructoffset())->InitTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_520_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RBRingItem::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_520_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBRingItem::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_520_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RBRingItem::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_520_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RBRingItem::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_520_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBRingItem*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_520_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBRingItem::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_520_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBRingItem::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_520_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBRingItem::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_520_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBRingItem::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RBExperimentDict_520_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RBRingItem* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RBRingItem(*(RBRingItem*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingItem));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RBRingItem G__TRBRingItem;
static int G__RBExperimentDict_520_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RBRingItem*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RBRingItem*) (soff+(sizeof(RBRingItem)*i)))->~G__TRBRingItem();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RBRingItem*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RBRingItem*) (soff))->~G__TRBRingItem();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RBExperimentDict_520_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBRingItem* dest = (RBRingItem*) G__getstructoffset();
   *dest = *(RBRingItem*) libp->para[0].ref;
   const RBRingItem& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RBRingStateChangeItem */
static int G__RBExperimentDict_521_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBRingStateChangeItem* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBRingStateChangeItem[n];
     } else {
       p = new((void*) gvp) RBRingStateChangeItem[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBRingStateChangeItem;
     } else {
       p = new((void*) gvp) RBRingStateChangeItem;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingStateChangeItem));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_521_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBRingStateChangeItem* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RBRingStateChangeItem(
(ULong64_t) G__ULonglong(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), *((string*) G__int(libp->para[3]))
, (UInt_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, (time_t) G__int(libp->para[6]), *((string*) G__int(libp->para[7])));
   } else {
     p = new((void*) gvp) RBRingStateChangeItem(
(ULong64_t) G__ULonglong(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), *((string*) G__int(libp->para[3]))
, (UInt_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, (time_t) G__int(libp->para[6]), *((string*) G__int(libp->para[7])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingStateChangeItem));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_521_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBRingStateChangeItem*) G__getstructoffset())->SetType(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_521_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((RBRingStateChangeItem*) G__getstructoffset())->GetRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_521_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((RBRingStateChangeItem*) G__getstructoffset())->GetRunTitle();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_521_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((RBRingStateChangeItem*) G__getstructoffset())->GetTimestamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_521_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((RBRingStateChangeItem*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_521_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RBRingStateChangeItem::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_521_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBRingStateChangeItem::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_521_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RBRingStateChangeItem::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_521_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RBRingStateChangeItem::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_521_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBRingStateChangeItem*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_521_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBRingStateChangeItem::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_521_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBRingStateChangeItem::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_521_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBRingStateChangeItem::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_521_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBRingStateChangeItem::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RBExperimentDict_521_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RBRingStateChangeItem* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RBRingStateChangeItem(*(RBRingStateChangeItem*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingStateChangeItem));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RBRingStateChangeItem G__TRBRingStateChangeItem;
static int G__RBExperimentDict_521_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RBRingStateChangeItem*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RBRingStateChangeItem*) (soff+(sizeof(RBRingStateChangeItem)*i)))->~G__TRBRingStateChangeItem();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RBRingStateChangeItem*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RBRingStateChangeItem*) (soff))->~G__TRBRingStateChangeItem();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RBExperimentDict_521_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBRingStateChangeItem* dest = (RBRingStateChangeItem*) G__getstructoffset();
   *dest = *(RBRingStateChangeItem*) libp->para[0].ref;
   const RBRingStateChangeItem& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RBExperiment */
static int G__RBExperimentDict_524_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBExperiment* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBExperiment[n];
     } else {
       p = new((void*) gvp) RBExperiment[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBExperiment;
     } else {
       p = new((void*) gvp) RBExperiment;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBExperimentDictLN_RBExperiment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBExperiment* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RBExperiment((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) RBExperiment((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBExperimentDictLN_RBExperiment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((RBExperiment*) G__getstructoffset())->ConvertEvtFile((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((RBExperiment*) G__getstructoffset())->ConvertEvtFile((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((RBExperiment*) G__getstructoffset())->ConvertRingBufferEvtFile((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((RBExperiment*) G__getstructoffset())->ConvertRingBufferEvtFile((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RBExperiment*) G__getstructoffset())->ConvertEvtFile((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBExperiment*) G__getstructoffset())->CreateFolders();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBExperiment*) G__getstructoffset())->DumpInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBExperiment*) G__getstructoffset())->DumpClassInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RBExperiment*) G__getstructoffset())->EndROOTConverter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBExperiment*) G__getstructoffset())->AddTTreeUserInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBExperiment*) G__getstructoffset())->Fill();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBExperiment*) G__getstructoffset())->InitClass();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((RBExperiment*) G__getstructoffset())->InitializeROOTConverter((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((RBExperiment*) G__getstructoffset())->InitializeROOTConverter((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((RBExperiment*) G__getstructoffset())->InitializeROOTConverter((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBExperiment*) G__getstructoffset())->InitTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((RBExperiment*) G__getstructoffset())->LoadTree((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RBExperiment*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBExperiment*) G__getstructoffset())->ResetTrees();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RBExperiment*) G__getstructoffset())->RegisterElectronics((RBElectronics*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RBExperiment*) G__getstructoffset())->IsDataMerged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((RBExperiment*) G__getstructoffset())->GetEvtFileSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((RBExperiment*) G__getstructoffset())->GetReadBuffers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RBExperiment*) G__getstructoffset())->GetElectronicsList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBExperiment*) G__getstructoffset())->SetBRISize((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBExperiment*) G__getstructoffset())->SetBRITimestamp((ULong64_t) G__ULonglong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBExperiment*) G__getstructoffset())->SetMergedData((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RBExperiment*) G__getstructoffset())->SetEventFilePath((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RBExperiment*) G__getstructoffset())->SetExperimentNumber((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RBExperiment*) G__getstructoffset())->SetRootFilePath((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBExperiment*) G__getstructoffset())->SetStateInfo((RBRingStateChangeItem*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RBExperiment::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBExperiment::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RBExperiment::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RBExperiment::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBExperiment*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBExperiment::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBExperiment::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBExperiment::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBExperimentDict_524_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBExperiment::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RBExperiment G__TRBExperiment;
static int G__RBExperimentDict_524_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RBExperiment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RBExperiment*) (soff+(sizeof(RBExperiment)*i)))->~G__TRBExperiment();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RBExperiment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RBExperiment*) (soff))->~G__TRBExperiment();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* RBNSCLBufferHeader */

/* RBRingItem */

/* RBRingStateChangeItem */

/* RBExperiment */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRBExperimentDict {
 public:
  G__Sizep2memfuncRBExperimentDict(): p(&G__Sizep2memfuncRBExperimentDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRBExperimentDict::*p)();
};

size_t G__get_sizep2memfuncRBExperimentDict()
{
  G__Sizep2memfuncRBExperimentDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRBExperimentDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RBExperimentDictLN_RBNSCLBufferHeader))) {
     RBNSCLBufferHeader *G__Lderived;
     G__Lderived=(RBNSCLBufferHeader*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBExperimentDictLN_RBNSCLBufferHeader),G__get_linked_tagnum(&G__RBExperimentDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingItem))) {
     RBRingItem *G__Lderived;
     G__Lderived=(RBRingItem*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingItem),G__get_linked_tagnum(&G__RBExperimentDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingStateChangeItem))) {
     RBRingStateChangeItem *G__Lderived;
     G__Lderived=(RBRingStateChangeItem*)0x1000;
     {
       RBRingItem *G__Lpbase=(RBRingItem*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingStateChangeItem),G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingItem),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingStateChangeItem),G__get_linked_tagnum(&G__RBExperimentDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RBExperimentDictLN_RBExperiment))) {
     RBExperiment *G__Lderived;
     G__Lderived=(RBExperiment*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBExperimentDictLN_RBExperiment),G__get_linked_tagnum(&G__RBExperimentDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBExperimentDictLN_RBExperiment),G__get_linked_tagnum(&G__RBExperimentDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRBExperimentDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RBExperimentDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RBExperimentDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RBExperimentDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RBExperimentDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__RBExperimentDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UShort_t>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RBModuleInfo*>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_vectorlERBModuleInfomUcOallocatorlERBModuleInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_reverse_iteratorlEvectorlERBModuleInfomUcOallocatorlERBModuleInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RBExperimentDictLN_vectorlERBModuleInfomUcOallocatorlERBModuleInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_reverse_iteratorlEvectorlERBModuleInfomUcOallocatorlERBModuleInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RBExperimentDictLN_vectorlERBModuleInfomUcOallocatorlERBModuleInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RBDAQStackInfo*>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_vectorlERBDAQStackInfomUcOallocatorlERBDAQStackInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_reverse_iteratorlEvectorlERBDAQStackInfomUcOallocatorlERBDAQStackInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RBExperimentDictLN_vectorlERBDAQStackInfomUcOallocatorlERBDAQStackInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_reverse_iteratorlEvectorlERBDAQStackInfomUcOallocatorlERBDAQStackInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RBExperimentDictLN_vectorlERBDAQStackInfomUcOallocatorlERBDAQStackInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__RBExperimentDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* RBNSCLBufferHeader */
static void G__setup_memvarRBNSCLBufferHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RBExperimentDictLN_RBNSCLBufferHeader));
   { RBNSCLBufferHeader *p; p=(RBNSCLBufferHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->nwds)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"nwds=",0,"Number of used words in the buffer.");
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"type=",0,"Type of data in the buffer.");
   G__memvar_setup((void*)((long)(&p->sequence)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"sequence=",0,"Buffer sequence number.");
   G__memvar_setup((void*)((long)(&p->nEntities)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"nEntities=",0,"Number of entities in the buffer.");
   G__memvar_setup((void*)((long)(&p->b_nwds)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TBranch),-1,-1,1,"b_nwds=",0,"! nwds branch.");
   G__memvar_setup((void*)((long)(&p->b_type)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TBranch),-1,-1,1,"b_type=",0,"! type branch.");
   G__memvar_setup((void*)((long)(&p->b_sequence)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TBranch),-1,-1,1,"b_sequence=",0,"! sequence branch.");
   G__memvar_setup((void*)((long)(&p->b_nEntities)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TBranch),-1,-1,1,"b_nEntities=",0,"! nEntities branch.");
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TTree),-1,-1,1,"fChain=",0,"! pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)((long)(&p->fCurrent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCurrent=",0,"! current Tree number in a TChain");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RBRingItem */
static void G__setup_memvarRBRingItem(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingItem));
   { RBRingItem *p; p=(RBRingItem*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,2,"fTimestamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fSourceId=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fBarrierType=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("size_t"),-1,2,"fMaxBody=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_Type)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TBranch),-1,-1,1,"b_Type=",0,"! type branch.");
   G__memvar_setup((void*)((long)(&p->b_Timestamp)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TBranch),-1,-1,1,"b_Timestamp=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_SourceId)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TBranch),-1,-1,1,"b_SourceId=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_BarrierType)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TBranch),-1,-1,1,"b_BarrierType=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_MaxBody)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TBranch),-1,-1,1,"b_MaxBody=",0,"!");
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TTree),-1,-1,1,"fChain=",0,"! pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)((long)(&p->fCurrent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCurrent=",0,"! current Tree number in a TChain");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RBRingStateChangeItem */
static void G__setup_memvarRBRingStateChangeItem(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingStateChangeItem));
   { RBRingStateChangeItem *p; p=(RBRingStateChangeItem*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TString),-1,-1,4,"fReason=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fTimeOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-1,4,"fTimestamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TString),-1,-1,4,"fRunTitle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TTree),-1,-1,1,"fChain=",0,"! pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)((long)(&p->fCurrent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCurrent=",0,"! current Tree number in a TChain");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RBExperiment */
static void G__setup_memvarRBExperiment(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RBExperimentDictLN_RBExperiment));
   { RBExperiment *p; p=(RBExperiment*)0x1000; if (p) { }
   G__memvar_setup((void*)0,82,0,0,-1,G__defined_typename("UShort_t"),-1,4,"p=",0,"! Pointer to event buffers.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunNumber=",0,"! Number of the current run to be unpacked.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEvtFileNumber=",0,"! Number of the current evt file.");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fEvtFileSize=",0,"! Size of the evt file in bytes.");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fnBuf2Read=",0,"! Number of buffers to unpack.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMergedData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,4,"fEvtFile=",0,"! The current EVT file.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TFile),-1,-1,4,"fROOTFile=",0,"! The current ROOT file for output.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TList),-1,-1,4,"fElectronics=",0,"! List of registered electronics to process.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TTree),-1,-1,4,"fRootTree=",0,"!");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"nWords=",0,"! Number of used words in the buffer.");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"type=",0,"! Type of data in the buffer.");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"checksum=",0,"! Buffer checksum.");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"runNum=",0,"! Run number of active run.");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"sequence[2]=",0,"! Buffer sequence number.");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"nEntities=",0,"! Number of entities or events in the buffer.");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"format=",0,"! Buffer format version.");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"entitySize=",0,"! Entity size word (self-inclusive).");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"subEvtSize=",0,"! Event size word (self-inclusive).");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"nReadWords=",0,"! Number of read words in the buffer.");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"subEvtLength=",0,"! Number of words in an event.");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fBuffers=",0,"! Number of read buffers.");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fnTotEntities=",0,"! Total number of entities of events in the run.");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fnTotWords=",0,"! Total number of words in run.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"counter=",0,"! Counter for updating progress.");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"cent=",0,"! Percent done.");
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-1,4,"start=",0,"! Start conversion time.");
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-1,4,"now=",0,"! Current time.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPauses=",0,"! Number of times run was paused.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fResumes=",0,"! Number of times run was resumed.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fRunEnd=",0,"! Did we find an end run buffer?");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fBRI_Size=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fBRI_Timestamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->expNumber)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TNamed),-1,-1,1,"expNumber=",0,"! Experiment ID number.");
   G__memvar_setup((void*)((long)(&p->expTitle)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TNamed),-1,-1,1,"expTitle=",0,"! Experiment title.");
   G__memvar_setup((void*)((long)(&p->runTitle)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TNamed),-1,-1,1,"runTitle=",0,"! Run title.");
   G__memvar_setup((void*)((long)(&p->runNumber)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TNamed),-1,-1,1,"runNumber=",0,"! Run number.");
   G__memvar_setup((void*)((long)(&p->evtFileNumber)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TNamed),-1,-1,1,"evtFileNumber=",0,"! Evt file Number.");
   G__memvar_setup((void*)((long)(&p->dateTimestamp)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TNamed),-1,-1,1,"dateTimestamp=",0,"! Date timestamp (UNIX time(2)).");
   G__memvar_setup((void*)((long)(&p->dateBegin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TNamed),-1,-1,1,"dateBegin=",0,"! Run creation date.");
   G__memvar_setup((void*)((long)(&p->timeBegin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TNamed),-1,-1,1,"timeBegin=",0,"! Run creation time.");
   G__memvar_setup((void*)((long)(&p->dateEnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TNamed),-1,-1,1,"dateEnd=",0,"! Run end date.");
   G__memvar_setup((void*)((long)(&p->timeEnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TNamed),-1,-1,1,"timeEnd=",0,"! Run end time.");
   G__memvar_setup((void*)((long)(&p->evtSize)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TNamed),-1,-1,1,"evtSize=",0,"! Event file size.");
   G__memvar_setup((void*)((long)(&p->rootSize)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TNamed),-1,-1,1,"rootSize=",0,"! Root file size.");
   G__memvar_setup((void*)((long)(&p->evtFilePath)-(long)(p)),67,0,1,-1,G__defined_typename("Char_t"),-1,1,"evtFilePath=",0,"! Source of event files.");
   G__memvar_setup((void*)((long)(&p->rootFilePath)-(long)(p)),67,0,1,-1,G__defined_typename("Char_t"),-1,1,"rootFilePath=",0,"! Destination of ROOT files.");
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TTree),-1,-1,1,"fChain=",0,"! Pointer to the analyzed TTree or TChain.");
   G__memvar_setup((void*)((long)(&p->fCurrent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCurrent=",0,"! Current Tree number in a TChain.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBExperimentDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRBExperimentDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncRBNSCLBufferHeader(void) {
   /* RBNSCLBufferHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RBExperimentDictLN_RBNSCLBufferHeader));
   G__memfunc_setup("RBNSCLBufferHeader",1639,G__RBExperimentDict_519_0_1, 105, G__get_linked_tagnum(&G__RBExperimentDictLN_RBNSCLBufferHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitClass",906,G__RBExperimentDict_519_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "Calls all InitClass methods.", (void*) NULL, 0);
   G__memfunc_setup("InitTree",804,G__RBExperimentDict_519_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - itree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RBExperimentDict_519_0_5, 85, G__get_linked_tagnum(&G__RBExperimentDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RBNSCLBufferHeader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RBExperimentDict_519_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBNSCLBufferHeader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RBExperimentDict_519_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RBNSCLBufferHeader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RBExperimentDict_519_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RBNSCLBufferHeader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RBExperimentDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RBExperimentDict_519_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RBExperimentDict_519_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBNSCLBufferHeader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RBExperimentDict_519_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBNSCLBufferHeader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RBExperimentDict_519_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBNSCLBufferHeader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RBExperimentDict_519_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBNSCLBufferHeader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RBNSCLBufferHeader", 1639, G__RBExperimentDict_519_0_17, (int) ('i'), G__get_linked_tagnum(&G__RBExperimentDictLN_RBNSCLBufferHeader), -1, 0, 1, 1, 1, 0, "u 'RBNSCLBufferHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RBNSCLBufferHeader", 1765, G__RBExperimentDict_519_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RBExperimentDict_519_0_19, (int) ('u'), G__get_linked_tagnum(&G__RBExperimentDictLN_RBNSCLBufferHeader), -1, 1, 1, 1, 1, 0, "u 'RBNSCLBufferHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRBRingItem(void) {
   /* RBRingItem */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingItem));
   G__memfunc_setup("RBRingItem",947,G__RBExperimentDict_520_0_1, 105, G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingItem), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RBRingItem",947,G__RBExperimentDict_520_0_2, 105, G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingItem), -1, 0, 5, 1, 1, 0, 
"r - 'UShort_t' 0 - type m - 'ULong64_t' 0 - timestamp "
"h - 'UInt_t' 0 - sourceId h - 'UInt_t' 0 '0' barrierType "
"k - 'size_t' 0 '8192' maxBody", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__RBExperimentDict_520_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBodyHeader",1283,G__RBExperimentDict_520_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"m - 'ULong64_t' 0 - timestamp h - 'UInt_t' 0 - sourceId "
"h - 'UInt_t' 0 '0' barrierType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitClass",906,G__RBExperimentDict_520_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", "Calls all InitClass methods.", (void*) NULL, 1);
   G__memfunc_setup("InitTree",804,G__RBExperimentDict_520_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RBExperimentDict_520_0_8, 85, G__get_linked_tagnum(&G__RBExperimentDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RBRingItem::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RBExperimentDict_520_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBRingItem::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RBExperimentDict_520_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RBRingItem::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RBExperimentDict_520_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RBRingItem::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RBExperimentDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RBExperimentDict_520_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RBExperimentDict_520_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBRingItem::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RBExperimentDict_520_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBRingItem::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RBExperimentDict_520_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBRingItem::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RBExperimentDict_520_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBRingItem::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RBRingItem", 947, G__RBExperimentDict_520_0_20, (int) ('i'), G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingItem), -1, 0, 1, 1, 1, 0, "u 'RBRingItem' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RBRingItem", 1073, G__RBExperimentDict_520_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RBExperimentDict_520_0_22, (int) ('u'), G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingItem), -1, 1, 1, 1, 1, 0, "u 'RBRingItem' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRBRingStateChangeItem(void) {
   /* RBRingStateChangeItem */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingStateChangeItem));
   G__memfunc_setup("RBRingStateChangeItem",2042,G__RBExperimentDict_521_0_1, 105, G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingStateChangeItem), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RBRingStateChangeItem",2042,G__RBExperimentDict_521_0_2, 105, G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingStateChangeItem), -1, 0, 8, 1, 1, 0, 
"m - 'ULong64_t' 0 - eventTimestamp h - 'UInt_t' 0 - sourceId "
"h - 'UInt_t' 0 - barrierType u 'string' - 0 - reason "
"h - 'UInt_t' 0 - runNumber h - 'UInt_t' 0 - timeOffset "
"l - 'time_t' 0 - timestamp u 'string' - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__RBExperimentDict_521_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - reason", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunNumber",1214,G__RBExperimentDict_521_0_4, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunTitle",1111,G__RBExperimentDict_521_0_5, 117, G__get_linked_tagnum(&G__RBExperimentDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimestamp",1236,G__RBExperimentDict_521_0_6, 108, -1, G__defined_typename("time_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__RBExperimentDict_521_0_7, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitClass",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "Calls all InitClass methods.", (void*) NULL, 1);
   G__memfunc_setup("InitTree",804,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RBExperimentDict_521_0_11, 85, G__get_linked_tagnum(&G__RBExperimentDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RBRingStateChangeItem::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RBExperimentDict_521_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBRingStateChangeItem::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RBExperimentDict_521_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RBRingStateChangeItem::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RBExperimentDict_521_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RBRingStateChangeItem::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RBExperimentDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RBExperimentDict_521_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RBExperimentDict_521_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBRingStateChangeItem::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RBExperimentDict_521_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBRingStateChangeItem::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RBExperimentDict_521_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBRingStateChangeItem::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RBExperimentDict_521_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBRingStateChangeItem::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RBRingStateChangeItem", 2042, G__RBExperimentDict_521_0_23, (int) ('i'), 
G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingStateChangeItem), -1, 0, 1, 1, 1, 0, "u 'RBRingStateChangeItem' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RBRingStateChangeItem", 2168, G__RBExperimentDict_521_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RBExperimentDict_521_0_25, (int) ('u'), G__get_linked_tagnum(&G__RBExperimentDictLN_RBRingStateChangeItem), -1, 1, 1, 1, 1, 0, "u 'RBRingStateChangeItem' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRBExperiment(void) {
   /* RBExperiment */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RBExperimentDictLN_RBExperiment));
   G__memfunc_setup("RBExperiment",1205,G__RBExperimentDict_524_0_1, 105, G__get_linked_tagnum(&G__RBExperimentDictLN_RBExperiment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RBExperiment",1205,G__RBExperimentDict_524_0_2, 105, G__get_linked_tagnum(&G__RBExperimentDictLN_RBExperiment), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ConvertEvtFile",1424,G__RBExperimentDict_524_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - evtFile C - 'Char_t' 10 - rootFile "
"C - 'Option_t' 10 '\"0\"' nBufs", "Converts an event file to root.", (void*) NULL, 0);
   G__memfunc_setup("ConvertRingBufferEvtFile",2426,G__RBExperimentDict_524_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - evtFile C - 'Char_t' 10 - rootFile "
"C - 'Option_t' 10 '\"0\"' nBufs", "Converts a ring buffer event file to root.", (void*) NULL, 0);
   G__memfunc_setup("ConvertEvtFile",1424,G__RBExperimentDict_524_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - evtFileList", "Converts a list of event files.", (void*) NULL, 0);
   G__memfunc_setup("CreateFolders",1315,G__RBExperimentDict_524_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "Create all folders.", (void*) NULL, 0);
   G__memfunc_setup("DumpInfo",802,G__RBExperimentDict_524_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "Dump event info.", (void*) NULL, 0);
   G__memfunc_setup("DumpClassInfo",1304,G__RBExperimentDict_524_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", "Dump class build and fill info.", (void*) NULL, 0);
   G__memfunc_setup("EndROOTConverter",1555,G__RBExperimentDict_524_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTTreeUserInfo",1560,G__RBExperimentDict_524_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__RBExperimentDict_524_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", "Fill TTree", (void*) NULL, 0);
   G__memfunc_setup("InitClass",906,G__RBExperimentDict_524_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", "Calls all InitClass methods.", (void*) NULL, 0);
   G__memfunc_setup("InitializeROOTConverter",2318,G__RBExperimentDict_524_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - evtFile C - 'Char_t' 10 '\"out.root\"' rootFile "
"C - 'Option_t' 10 '\"0\"' nBufs", "Initialized the TTrees and etc. for EVT file conversion.", (void*) NULL, 0);
   G__memfunc_setup("InitTree",804,G__RBExperimentDict_524_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - itree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadTree",784,G__RBExperimentDict_524_0_16, 110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__RBExperimentDict_524_0_17, 85, G__get_linked_tagnum(&G__RBExperimentDictLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetTrees",1030,G__RBExperimentDict_524_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", "Clear TTrees UserInfo and delete objects.", (void*) NULL, 0);
   G__memfunc_setup("RegisterElectronics",1984,G__RBExperimentDict_524_0_19, 85, G__get_linked_tagnum(&G__RBExperimentDictLN_RBElectronics), -1, 0, 1, 1, 1, 0, "U 'RBElectronics' - 0 - elc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDataMerged",1162,G__RBExperimentDict_524_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvtFileSize",1386,G__RBExperimentDict_524_0_21, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReadBuffers",1385,G__RBExperimentDict_524_0_22, 109, -1, G__defined_typename("ULong64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetElectronicsList",1847,G__RBExperimentDict_524_0_23, 85, G__get_linked_tagnum(&G__RBExperimentDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBRISize",932,G__RBExperimentDict_524_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBRITimestamp",1469,G__RBExperimentDict_524_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "m - 'ULong64_t' 0 - tStamp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMergedData",1274,G__RBExperimentDict_524_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - mergedFlag", "Sets the merged data flag.", (void*) NULL, 0);
   G__memfunc_setup("SetEventFilePath",1595,G__RBExperimentDict_524_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - path", "Sets the event file path.", (void*) NULL, 0);
   G__memfunc_setup("SetExperimentNumber",1974,G__RBExperimentDict_524_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - number", "Sets the experiment number.", (void*) NULL, 0);
   G__memfunc_setup("SetRootFilePath",1501,G__RBExperimentDict_524_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - path", "Sets the root file path.", (void*) NULL, 0);
   G__memfunc_setup("SetStateInfo",1209,G__RBExperimentDict_524_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RBRingStateChangeItem' - 0 - -", "Sets additional information such as run start time", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RBExperimentDict_524_0_31, 85, G__get_linked_tagnum(&G__RBExperimentDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RBExperiment::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RBExperimentDict_524_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBExperiment::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RBExperimentDict_524_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RBExperiment::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RBExperimentDict_524_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RBExperiment::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RBExperimentDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RBExperimentDict_524_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RBExperimentDict_524_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBExperiment::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RBExperimentDict_524_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBExperiment::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RBExperimentDict_524_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBExperiment::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RBExperimentDict_524_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBExperiment::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RBExperiment", 1331, G__RBExperimentDict_524_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRBExperimentDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRBExperimentDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRBExperimentDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RBExperimentDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__RBExperimentDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_RBNSCLBufferHeader = { "RBNSCLBufferHeader" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_RBRingItem = { "RBRingItem" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_RBRingStateChangeItem = { "RBRingStateChangeItem" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_RBElectronics = { "RBElectronics" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_RBExperiment = { "RBExperiment" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_vectorlERBModuleInfomUcOallocatorlERBModuleInfomUgRsPgR = { "vector<RBModuleInfo*,allocator<RBModuleInfo*> >" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_reverse_iteratorlEvectorlERBModuleInfomUcOallocatorlERBModuleInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RBModuleInfo*,allocator<RBModuleInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_vectorlERBDAQStackInfomUcOallocatorlERBDAQStackInfomUgRsPgR = { "vector<RBDAQStackInfo*,allocator<RBDAQStackInfo*> >" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_reverse_iteratorlEvectorlERBDAQStackInfomUcOallocatorlERBDAQStackInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RBDAQStackInfo*,allocator<RBDAQStackInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__RBExperimentDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRBExperimentDict() {
  G__RBExperimentDictLN_TClass.tagnum = -1 ;
  G__RBExperimentDictLN_TBuffer.tagnum = -1 ;
  G__RBExperimentDictLN_TMemberInspector.tagnum = -1 ;
  G__RBExperimentDictLN_TObject.tagnum = -1 ;
  G__RBExperimentDictLN_TNamed.tagnum = -1 ;
  G__RBExperimentDictLN_TString.tagnum = -1 ;
  G__RBExperimentDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__RBExperimentDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__RBExperimentDictLN_string.tagnum = -1 ;
  G__RBExperimentDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__RBExperimentDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RBExperimentDictLN_TList.tagnum = -1 ;
  G__RBExperimentDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__RBExperimentDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RBExperimentDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__RBExperimentDictLN_TFile.tagnum = -1 ;
  G__RBExperimentDictLN_TTree.tagnum = -1 ;
  G__RBExperimentDictLN_TBranch.tagnum = -1 ;
  G__RBExperimentDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__RBExperimentDictLN_RBNSCLBufferHeader.tagnum = -1 ;
  G__RBExperimentDictLN_RBRingItem.tagnum = -1 ;
  G__RBExperimentDictLN_RBRingStateChangeItem.tagnum = -1 ;
  G__RBExperimentDictLN_RBElectronics.tagnum = -1 ;
  G__RBExperimentDictLN_RBExperiment.tagnum = -1 ;
  G__RBExperimentDictLN_vectorlERBModuleInfomUcOallocatorlERBModuleInfomUgRsPgR.tagnum = -1 ;
  G__RBExperimentDictLN_reverse_iteratorlEvectorlERBModuleInfomUcOallocatorlERBModuleInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RBExperimentDictLN_vectorlERBDAQStackInfomUcOallocatorlERBDAQStackInfomUgRsPgR.tagnum = -1 ;
  G__RBExperimentDictLN_reverse_iteratorlEvectorlERBDAQStackInfomUcOallocatorlERBDAQStackInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RBExperimentDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__RBExperimentDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__RBExperimentDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__RBExperimentDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRBExperimentDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_TString);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_string);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_TList);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_RBNSCLBufferHeader),sizeof(RBNSCLBufferHeader),-1,292096,(char*)NULL,G__setup_memvarRBNSCLBufferHeader,G__setup_memfuncRBNSCLBufferHeader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_RBRingItem),sizeof(RBRingItem),-1,324864,(char*)NULL,G__setup_memvarRBRingItem,G__setup_memfuncRBRingItem);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_RBRingStateChangeItem),sizeof(RBRingStateChangeItem),-1,324864,(char*)NULL,G__setup_memvarRBRingStateChangeItem,G__setup_memfuncRBRingStateChangeItem);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_RBElectronics);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_RBExperiment),sizeof(RBExperiment),-1,324864,"NSCL event-data unpacker.",G__setup_memvarRBExperiment,G__setup_memfuncRBExperiment);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_vectorlERBModuleInfomUcOallocatorlERBModuleInfomUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_reverse_iteratorlEvectorlERBModuleInfomUcOallocatorlERBModuleInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_vectorlERBDAQStackInfomUcOallocatorlERBDAQStackInfomUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_reverse_iteratorlEvectorlERBDAQStackInfomUcOallocatorlERBDAQStackInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__RBExperimentDictLN_TMatrixTBaselEdoublegR);
}
extern "C" void G__cpp_setupRBExperimentDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupRBExperimentDict()");
  G__set_cpp_environmentRBExperimentDict();
  G__cpp_setup_tagtableRBExperimentDict();

  G__cpp_setup_inheritanceRBExperimentDict();

  G__cpp_setup_typetableRBExperimentDict();

  G__cpp_setup_memvarRBExperimentDict();

  G__cpp_setup_memfuncRBExperimentDict();
  G__cpp_setup_globalRBExperimentDict();
  G__cpp_setup_funcRBExperimentDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRBExperimentDict();
  return;
}
class G__cpp_setup_initRBExperimentDict {
  public:
    G__cpp_setup_initRBExperimentDict() { G__add_setup_func("RBExperimentDict",(G__incsetup)(&G__cpp_setupRBExperimentDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRBExperimentDict() { G__remove_setup_func("RBExperimentDict"); }
};
G__cpp_setup_initRBExperimentDict G__cpp_setup_initializerRBExperimentDict;

