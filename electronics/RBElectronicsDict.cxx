//
// File generated by rootcint at Mon Apr  9 18:26:30 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME RBElectronicsDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "RBElectronicsDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void RBElectronics_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_RBElectronics(void *p);
   static void deleteArray_RBElectronics(void *p);
   static void destruct_RBElectronics(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RBElectronics*)
   {
      ::RBElectronics *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RBElectronics >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RBElectronics", ::RBElectronics::Class_Version(), "./RBElectronics.h", 18,
                  typeid(::RBElectronics), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RBElectronics::Dictionary, isa_proxy, 4,
                  sizeof(::RBElectronics) );
      instance.SetDelete(&delete_RBElectronics);
      instance.SetDeleteArray(&deleteArray_RBElectronics);
      instance.SetDestructor(&destruct_RBElectronics);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RBElectronics*)
   {
      return GenerateInitInstanceLocal((::RBElectronics*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RBElectronics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RBSisTimestampUnpacker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_RBSisTimestampUnpacker(void *p);
   static void deleteArray_RBSisTimestampUnpacker(void *p);
   static void destruct_RBSisTimestampUnpacker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RBSisTimestampUnpacker*)
   {
      ::RBSisTimestampUnpacker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RBSisTimestampUnpacker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RBSisTimestampUnpacker", ::RBSisTimestampUnpacker::Class_Version(), "./RBSisTimestampUnpacker.h", 22,
                  typeid(::RBSisTimestampUnpacker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RBSisTimestampUnpacker::Dictionary, isa_proxy, 4,
                  sizeof(::RBSisTimestampUnpacker) );
      instance.SetDelete(&delete_RBSisTimestampUnpacker);
      instance.SetDeleteArray(&deleteArray_RBSisTimestampUnpacker);
      instance.SetDestructor(&destruct_RBSisTimestampUnpacker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RBSisTimestampUnpacker*)
   {
      return GenerateInitInstanceLocal((::RBSisTimestampUnpacker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RBSisTimestampUnpacker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RBHINPHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RBHINPHit(void *p = 0);
   static void *newArray_RBHINPHit(Long_t size, void *p);
   static void delete_RBHINPHit(void *p);
   static void deleteArray_RBHINPHit(void *p);
   static void destruct_RBHINPHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RBHINPHit*)
   {
      ::RBHINPHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RBHINPHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RBHINPHit", ::RBHINPHit::Class_Version(), "./RBHINPUnpacker.h", 16,
                  typeid(::RBHINPHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RBHINPHit::Dictionary, isa_proxy, 4,
                  sizeof(::RBHINPHit) );
      instance.SetNew(&new_RBHINPHit);
      instance.SetNewArray(&newArray_RBHINPHit);
      instance.SetDelete(&delete_RBHINPHit);
      instance.SetDeleteArray(&deleteArray_RBHINPHit);
      instance.SetDestructor(&destruct_RBHINPHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RBHINPHit*)
   {
      return GenerateInitInstanceLocal((::RBHINPHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RBHINPHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RBHINPUnpacker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_RBHINPUnpacker(void *p);
   static void deleteArray_RBHINPUnpacker(void *p);
   static void destruct_RBHINPUnpacker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RBHINPUnpacker*)
   {
      ::RBHINPUnpacker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RBHINPUnpacker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RBHINPUnpacker", ::RBHINPUnpacker::Class_Version(), "./RBHINPUnpacker.h", 64,
                  typeid(::RBHINPUnpacker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RBHINPUnpacker::Dictionary, isa_proxy, 4,
                  sizeof(::RBHINPUnpacker) );
      instance.SetDelete(&delete_RBHINPUnpacker);
      instance.SetDeleteArray(&deleteArray_RBHINPUnpacker);
      instance.SetDestructor(&destruct_RBHINPUnpacker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RBHINPUnpacker*)
   {
      return GenerateInitInstanceLocal((::RBHINPUnpacker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RBHINPUnpacker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RBCAEN7xxUnpacker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RBCAEN7xxUnpacker(void *p = 0);
   static void *newArray_RBCAEN7xxUnpacker(Long_t size, void *p);
   static void delete_RBCAEN7xxUnpacker(void *p);
   static void deleteArray_RBCAEN7xxUnpacker(void *p);
   static void destruct_RBCAEN7xxUnpacker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RBCAEN7xxUnpacker*)
   {
      ::RBCAEN7xxUnpacker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RBCAEN7xxUnpacker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RBCAEN7xxUnpacker", ::RBCAEN7xxUnpacker::Class_Version(), "./RBCAEN7xxUnpacker.h", 24,
                  typeid(::RBCAEN7xxUnpacker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RBCAEN7xxUnpacker::Dictionary, isa_proxy, 4,
                  sizeof(::RBCAEN7xxUnpacker) );
      instance.SetNew(&new_RBCAEN7xxUnpacker);
      instance.SetNewArray(&newArray_RBCAEN7xxUnpacker);
      instance.SetDelete(&delete_RBCAEN7xxUnpacker);
      instance.SetDeleteArray(&deleteArray_RBCAEN7xxUnpacker);
      instance.SetDestructor(&destruct_RBCAEN7xxUnpacker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RBCAEN7xxUnpacker*)
   {
      return GenerateInitInstanceLocal((::RBCAEN7xxUnpacker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RBCAEN7xxUnpacker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RBUSBStackMarker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_RBUSBStackMarker(void *p);
   static void deleteArray_RBUSBStackMarker(void *p);
   static void destruct_RBUSBStackMarker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RBUSBStackMarker*)
   {
      ::RBUSBStackMarker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RBUSBStackMarker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RBUSBStackMarker", ::RBUSBStackMarker::Class_Version(), "./RBUSBStackMarker.h", 12,
                  typeid(::RBUSBStackMarker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RBUSBStackMarker::Dictionary, isa_proxy, 4,
                  sizeof(::RBUSBStackMarker) );
      instance.SetDelete(&delete_RBUSBStackMarker);
      instance.SetDeleteArray(&deleteArray_RBUSBStackMarker);
      instance.SetDestructor(&destruct_RBUSBStackMarker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RBUSBStackMarker*)
   {
      return GenerateInitInstanceLocal((::RBUSBStackMarker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RBUSBStackMarker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RBTimestamp_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_RBTimestamp(void *p);
   static void deleteArray_RBTimestamp(void *p);
   static void destruct_RBTimestamp(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RBTimestamp*)
   {
      ::RBTimestamp *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RBTimestamp >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RBTimestamp", ::RBTimestamp::Class_Version(), "./RBTimestamp.h", 12,
                  typeid(::RBTimestamp), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RBTimestamp::Dictionary, isa_proxy, 4,
                  sizeof(::RBTimestamp) );
      instance.SetDelete(&delete_RBTimestamp);
      instance.SetDeleteArray(&deleteArray_RBTimestamp);
      instance.SetDestructor(&destruct_RBTimestamp);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RBTimestamp*)
   {
      return GenerateInitInstanceLocal((::RBTimestamp*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RBTimestamp*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RBPh7xxUnpacker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RBPh7xxUnpacker(void *p = 0);
   static void *newArray_RBPh7xxUnpacker(Long_t size, void *p);
   static void delete_RBPh7xxUnpacker(void *p);
   static void deleteArray_RBPh7xxUnpacker(void *p);
   static void destruct_RBPh7xxUnpacker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RBPh7xxUnpacker*)
   {
      ::RBPh7xxUnpacker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RBPh7xxUnpacker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RBPh7xxUnpacker", ::RBPh7xxUnpacker::Class_Version(), "./RBPh7xxUnpacker.h", 29,
                  typeid(::RBPh7xxUnpacker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RBPh7xxUnpacker::Dictionary, isa_proxy, 4,
                  sizeof(::RBPh7xxUnpacker) );
      instance.SetNew(&new_RBPh7xxUnpacker);
      instance.SetNewArray(&newArray_RBPh7xxUnpacker);
      instance.SetDelete(&delete_RBPh7xxUnpacker);
      instance.SetDeleteArray(&deleteArray_RBPh7xxUnpacker);
      instance.SetDestructor(&destruct_RBPh7xxUnpacker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RBPh7xxUnpacker*)
   {
      return GenerateInitInstanceLocal((::RBPh7xxUnpacker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RBPh7xxUnpacker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RBUSBStack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RBUSBStack(void *p = 0);
   static void *newArray_RBUSBStack(Long_t size, void *p);
   static void delete_RBUSBStack(void *p);
   static void deleteArray_RBUSBStack(void *p);
   static void destruct_RBUSBStack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RBUSBStack*)
   {
      ::RBUSBStack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RBUSBStack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RBUSBStack", ::RBUSBStack::Class_Version(), "./RBUSBStack.h", 29,
                  typeid(::RBUSBStack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RBUSBStack::Dictionary, isa_proxy, 4,
                  sizeof(::RBUSBStack) );
      instance.SetNew(&new_RBUSBStack);
      instance.SetNewArray(&newArray_RBUSBStack);
      instance.SetDelete(&delete_RBUSBStack);
      instance.SetDeleteArray(&deleteArray_RBUSBStack);
      instance.SetDestructor(&destruct_RBUSBStack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RBUSBStack*)
   {
      return GenerateInitInstanceLocal((::RBUSBStack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RBUSBStack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RBCAEN1x90Unpacker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RBCAEN1x90Unpacker(void *p = 0);
   static void *newArray_RBCAEN1x90Unpacker(Long_t size, void *p);
   static void delete_RBCAEN1x90Unpacker(void *p);
   static void deleteArray_RBCAEN1x90Unpacker(void *p);
   static void destruct_RBCAEN1x90Unpacker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RBCAEN1x90Unpacker*)
   {
      ::RBCAEN1x90Unpacker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RBCAEN1x90Unpacker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RBCAEN1x90Unpacker", ::RBCAEN1x90Unpacker::Class_Version(), "./RBCAEN1x90Unpacker.h", 20,
                  typeid(::RBCAEN1x90Unpacker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RBCAEN1x90Unpacker::Dictionary, isa_proxy, 4,
                  sizeof(::RBCAEN1x90Unpacker) );
      instance.SetNew(&new_RBCAEN1x90Unpacker);
      instance.SetNewArray(&newArray_RBCAEN1x90Unpacker);
      instance.SetDelete(&delete_RBCAEN1x90Unpacker);
      instance.SetDeleteArray(&deleteArray_RBCAEN1x90Unpacker);
      instance.SetDestructor(&destruct_RBCAEN1x90Unpacker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RBCAEN1x90Unpacker*)
   {
      return GenerateInitInstanceLocal((::RBCAEN1x90Unpacker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RBCAEN1x90Unpacker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr RBElectronics::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RBElectronics::Class_Name()
{
   return "RBElectronics";
}

//______________________________________________________________________________
const char *RBElectronics::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBElectronics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RBElectronics::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBElectronics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RBElectronics::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBElectronics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RBElectronics::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBElectronics*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RBSisTimestampUnpacker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RBSisTimestampUnpacker::Class_Name()
{
   return "RBSisTimestampUnpacker";
}

//______________________________________________________________________________
const char *RBSisTimestampUnpacker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBSisTimestampUnpacker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RBSisTimestampUnpacker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBSisTimestampUnpacker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RBSisTimestampUnpacker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBSisTimestampUnpacker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RBSisTimestampUnpacker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBSisTimestampUnpacker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RBHINPHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RBHINPHit::Class_Name()
{
   return "RBHINPHit";
}

//______________________________________________________________________________
const char *RBHINPHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBHINPHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RBHINPHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBHINPHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RBHINPHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBHINPHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RBHINPHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBHINPHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RBHINPUnpacker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RBHINPUnpacker::Class_Name()
{
   return "RBHINPUnpacker";
}

//______________________________________________________________________________
const char *RBHINPUnpacker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBHINPUnpacker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RBHINPUnpacker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBHINPUnpacker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RBHINPUnpacker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBHINPUnpacker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RBHINPUnpacker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBHINPUnpacker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RBCAEN7xxUnpacker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RBCAEN7xxUnpacker::Class_Name()
{
   return "RBCAEN7xxUnpacker";
}

//______________________________________________________________________________
const char *RBCAEN7xxUnpacker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBCAEN7xxUnpacker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RBCAEN7xxUnpacker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBCAEN7xxUnpacker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RBCAEN7xxUnpacker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBCAEN7xxUnpacker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RBCAEN7xxUnpacker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBCAEN7xxUnpacker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RBUSBStackMarker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RBUSBStackMarker::Class_Name()
{
   return "RBUSBStackMarker";
}

//______________________________________________________________________________
const char *RBUSBStackMarker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBUSBStackMarker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RBUSBStackMarker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBUSBStackMarker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RBUSBStackMarker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBUSBStackMarker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RBUSBStackMarker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBUSBStackMarker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RBTimestamp::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RBTimestamp::Class_Name()
{
   return "RBTimestamp";
}

//______________________________________________________________________________
const char *RBTimestamp::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBTimestamp*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RBTimestamp::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBTimestamp*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RBTimestamp::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBTimestamp*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RBTimestamp::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBTimestamp*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RBPh7xxUnpacker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RBPh7xxUnpacker::Class_Name()
{
   return "RBPh7xxUnpacker";
}

//______________________________________________________________________________
const char *RBPh7xxUnpacker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBPh7xxUnpacker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RBPh7xxUnpacker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBPh7xxUnpacker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RBPh7xxUnpacker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBPh7xxUnpacker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RBPh7xxUnpacker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBPh7xxUnpacker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RBUSBStack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RBUSBStack::Class_Name()
{
   return "RBUSBStack";
}

//______________________________________________________________________________
const char *RBUSBStack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBUSBStack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RBUSBStack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBUSBStack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RBUSBStack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBUSBStack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RBUSBStack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBUSBStack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RBCAEN1x90Unpacker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RBCAEN1x90Unpacker::Class_Name()
{
   return "RBCAEN1x90Unpacker";
}

//______________________________________________________________________________
const char *RBCAEN1x90Unpacker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBCAEN1x90Unpacker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RBCAEN1x90Unpacker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RBCAEN1x90Unpacker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RBCAEN1x90Unpacker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBCAEN1x90Unpacker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RBCAEN1x90Unpacker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RBCAEN1x90Unpacker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void RBTimestamp::Streamer(TBuffer &R__b)
{
   // Stream an object of class RBTimestamp.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RBTimestamp::Class(),this);
   } else {
      R__b.WriteClassBuffer(RBTimestamp::Class(),this);
   }
}

//______________________________________________________________________________
void RBTimestamp::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RBTimestamp.
      TClass *R__cl = ::RBTimestamp::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimestamp", &fTimestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fTimestamp", &b_fTimestamp);
      RBElectronics::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RBTimestamp(void *p) {
      delete ((::RBTimestamp*)p);
   }
   static void deleteArray_RBTimestamp(void *p) {
      delete [] ((::RBTimestamp*)p);
   }
   static void destruct_RBTimestamp(void *p) {
      typedef ::RBTimestamp current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RBTimestamp

//______________________________________________________________________________
void RBHINPUnpacker::Streamer(TBuffer &R__b)
{
   // Stream an object of class RBHINPUnpacker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RBHINPUnpacker::Class(),this);
   } else {
      R__b.WriteClassBuffer(RBHINPUnpacker::Class(),this);
   }
}

//______________________________________________________________________________
void RBHINPUnpacker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RBHINPUnpacker.
      TClass *R__cl = ::RBHINPUnpacker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnMBs", &fnMBs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUsingSISFADC", &fUsingSISFADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFoundBeginMarker", &fFoundBeginMarker);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReportNExtraMarkers", &fReportNExtraMarkers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNUnpackedEvents", &fNUnpackedEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalUnpackedData", &fTotalUnpackedData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFaultyCount", &fFaultyCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErrorCount", &fErrorCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBankMB[4][2]", fBankMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChName", &fChName);
      R__insp.InspectMember(fChName, "fChName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnCh", &fnCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimestamp[2]", fTimestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroupMask", &fGroupMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fData[4][32]", fData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNHits", &fNHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHits", &fHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fTimestamp", &b_fTimestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fGroupMask", &b_fGroupMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fHits", &b_fHits);
      R__insp.GenericShowMembers("RBModuleUnpacker", ( ::RBModuleUnpacker *) (this ), false);
      RBElectronics::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RBHINPUnpacker(void *p) {
      delete ((::RBHINPUnpacker*)p);
   }
   static void deleteArray_RBHINPUnpacker(void *p) {
      delete [] ((::RBHINPUnpacker*)p);
   }
   static void destruct_RBHINPUnpacker(void *p) {
      typedef ::RBHINPUnpacker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RBHINPUnpacker

//______________________________________________________________________________
void RBHINPHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class RBHINPHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RBHINPHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(RBHINPHit::Class(),this);
   }
}

//______________________________________________________________________________
void RBHINPHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RBHINPHit.
      TClass *R__cl = ::RBHINPHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXLMIndex", &fXLMIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBank", &fBank);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGlobalBank", &fGlobalBank);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChMismatch", &fChMismatch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChannel", &fChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChip", &fChip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergyHi", &fEnergyHi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergyLo", &fEnergyLo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RBHINPHit(void *p) {
      return  p ? new(p) ::RBHINPHit : new ::RBHINPHit;
   }
   static void *newArray_RBHINPHit(Long_t nElements, void *p) {
      return p ? new(p) ::RBHINPHit[nElements] : new ::RBHINPHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_RBHINPHit(void *p) {
      delete ((::RBHINPHit*)p);
   }
   static void deleteArray_RBHINPHit(void *p) {
      delete [] ((::RBHINPHit*)p);
   }
   static void destruct_RBHINPHit(void *p) {
      typedef ::RBHINPHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RBHINPHit

//______________________________________________________________________________
void RBCAEN7xxUnpacker::Streamer(TBuffer &R__b)
{
   // Stream an object of class RBCAEN7xxUnpacker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RBCAEN7xxUnpacker::Class(),this);
   } else {
      R__b.WriteClassBuffer(RBCAEN7xxUnpacker::Class(),this);
   }
}

//______________________________________________________________________________
void RBCAEN7xxUnpacker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RBCAEN7xxUnpacker.
      TClass *R__cl = ::RBCAEN7xxUnpacker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChName", &fChName);
      R__insp.InspectMember(fChName, "fChName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnCh", &fnCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fData[32]", fData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalUnpackedCount", &fTotalUnpackedCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOverflowCount", &fOverflowCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVSNMismatchCount", &fVSNMismatchCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      R__insp.GenericShowMembers("RBModuleUnpacker", ( ::RBModuleUnpacker *) (this ), false);
      RBElectronics::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RBCAEN7xxUnpacker(void *p) {
      return  p ? new(p) ::RBCAEN7xxUnpacker : new ::RBCAEN7xxUnpacker;
   }
   static void *newArray_RBCAEN7xxUnpacker(Long_t nElements, void *p) {
      return p ? new(p) ::RBCAEN7xxUnpacker[nElements] : new ::RBCAEN7xxUnpacker[nElements];
   }
   // Wrapper around operator delete
   static void delete_RBCAEN7xxUnpacker(void *p) {
      delete ((::RBCAEN7xxUnpacker*)p);
   }
   static void deleteArray_RBCAEN7xxUnpacker(void *p) {
      delete [] ((::RBCAEN7xxUnpacker*)p);
   }
   static void destruct_RBCAEN7xxUnpacker(void *p) {
      typedef ::RBCAEN7xxUnpacker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RBCAEN7xxUnpacker

//______________________________________________________________________________
void RBCAEN1x90Unpacker::Streamer(TBuffer &R__b)
{
   // Stream an object of class RBCAEN1x90Unpacker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RBCAEN1x90Unpacker::Class(),this);
   } else {
      R__b.WriteClassBuffer(RBCAEN1x90Unpacker::Class(),this);
   }
}

//______________________________________________________________________________
void RBCAEN1x90Unpacker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RBCAEN1x90Unpacker.
      TClass *R__cl = ::RBCAEN1x90Unpacker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDepth", &fDepth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefChannel", &fRefChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnChannels", &fnChannels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChanmask", &fChanmask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChanshift", &fChanshift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDatamask", &fDatamask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChsToNs", &fChsToNs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChName", &fChName);
      R__insp.InspectMember(fChName, "fChName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnCh", &fnCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimes[128]", fTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRandomGen", &fRandomGen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalUnpackedData", &fTotalUnpackedData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErrorCount", &fErrorCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNoReferenceCount", &fNoReferenceCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVSNMismatchCount", &fVSNMismatchCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      R__insp.GenericShowMembers("RBModuleUnpacker", ( ::RBModuleUnpacker *) (this ), false);
      RBElectronics::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RBCAEN1x90Unpacker(void *p) {
      return  p ? new(p) ::RBCAEN1x90Unpacker : new ::RBCAEN1x90Unpacker;
   }
   static void *newArray_RBCAEN1x90Unpacker(Long_t nElements, void *p) {
      return p ? new(p) ::RBCAEN1x90Unpacker[nElements] : new ::RBCAEN1x90Unpacker[nElements];
   }
   // Wrapper around operator delete
   static void delete_RBCAEN1x90Unpacker(void *p) {
      delete ((::RBCAEN1x90Unpacker*)p);
   }
   static void deleteArray_RBCAEN1x90Unpacker(void *p) {
      delete [] ((::RBCAEN1x90Unpacker*)p);
   }
   static void destruct_RBCAEN1x90Unpacker(void *p) {
      typedef ::RBCAEN1x90Unpacker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RBCAEN1x90Unpacker

//______________________________________________________________________________
void RBPh7xxUnpacker::Streamer(TBuffer &R__b)
{
   // Stream an object of class RBPh7xxUnpacker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RBPh7xxUnpacker::Class(),this);
   } else {
      R__b.WriteClassBuffer(RBPh7xxUnpacker::Class(),this);
   }
}

//______________________________________________________________________________
void RBPh7xxUnpacker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RBPh7xxUnpacker.
      TClass *R__cl = ::RBPh7xxUnpacker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChName", &fChName);
      R__insp.InspectMember(fChName, "fChName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnCh", &fnCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fData[16]", fData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      R__insp.GenericShowMembers("RBCCUSBPacket", ( ::RBCCUSBPacket *) (this ), false);
      RBElectronics::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RBPh7xxUnpacker(void *p) {
      return  p ? new(p) ::RBPh7xxUnpacker : new ::RBPh7xxUnpacker;
   }
   static void *newArray_RBPh7xxUnpacker(Long_t nElements, void *p) {
      return p ? new(p) ::RBPh7xxUnpacker[nElements] : new ::RBPh7xxUnpacker[nElements];
   }
   // Wrapper around operator delete
   static void delete_RBPh7xxUnpacker(void *p) {
      delete ((::RBPh7xxUnpacker*)p);
   }
   static void deleteArray_RBPh7xxUnpacker(void *p) {
      delete [] ((::RBPh7xxUnpacker*)p);
   }
   static void destruct_RBPh7xxUnpacker(void *p) {
      typedef ::RBPh7xxUnpacker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RBPh7xxUnpacker

//______________________________________________________________________________
void RBUSBStack::Streamer(TBuffer &R__b)
{
   // Stream an object of class RBUSBStack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RBUSBStack::Class(),this);
   } else {
      R__b.WriteClassBuffer(RBUSBStack::Class(),this);
   }
}

//______________________________________________________________________________
void RBUSBStack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RBUSBStack.
      TClass *R__cl = ::RBUSBStack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventCount", &fEventCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWordsCount", &fWordsCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVsnErrorCount", &fVsnErrorCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBufferMismatchCount", &fBufferMismatchCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUSBTimestamp", &fUSBTimestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStacks", &fStacks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.GenericShowMembers("RBModuleUnpacker", ( ::RBModuleUnpacker *) (this ), false);
      RBElectronics::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RBUSBStack(void *p) {
      return  p ? new(p) ::RBUSBStack : new ::RBUSBStack;
   }
   static void *newArray_RBUSBStack(Long_t nElements, void *p) {
      return p ? new(p) ::RBUSBStack[nElements] : new ::RBUSBStack[nElements];
   }
   // Wrapper around operator delete
   static void delete_RBUSBStack(void *p) {
      delete ((::RBUSBStack*)p);
   }
   static void deleteArray_RBUSBStack(void *p) {
      delete [] ((::RBUSBStack*)p);
   }
   static void destruct_RBUSBStack(void *p) {
      typedef ::RBUSBStack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RBUSBStack

//______________________________________________________________________________
void RBUSBStackMarker::Streamer(TBuffer &R__b)
{
   // Stream an object of class RBUSBStackMarker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RBUSBStackMarker::Class(),this);
   } else {
      R__b.WriteClassBuffer(RBUSBStackMarker::Class(),this);
   }
}

//______________________________________________________________________________
void RBUSBStackMarker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RBUSBStackMarker.
      TClass *R__cl = ::RBUSBStackMarker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMarker", &fMarker);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTitle", &fTitle);
      R__insp.InspectMember(fTitle, "fTitle.");
      RBElectronics::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RBUSBStackMarker(void *p) {
      delete ((::RBUSBStackMarker*)p);
   }
   static void deleteArray_RBUSBStackMarker(void *p) {
      delete [] ((::RBUSBStackMarker*)p);
   }
   static void destruct_RBUSBStackMarker(void *p) {
      typedef ::RBUSBStackMarker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RBUSBStackMarker

//______________________________________________________________________________
void RBElectronics::Streamer(TBuffer &R__b)
{
   // Stream an object of class RBElectronics.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RBElectronics::Class(),this);
   } else {
      R__b.WriteClassBuffer(RBElectronics::Class(),this);
   }
}

//______________________________________________________________________________
void RBElectronics::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RBElectronics.
      TClass *R__cl = ::RBElectronics::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranchName", &fBranchName);
      R__insp.InspectMember(fBranchName, "fBranchName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGeo", &fGeo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kMergedID", &kMergedID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFill", &fFill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnabled", &fEnabled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUnpackError", &fUnpackError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUnpackErrorCount", &fUnpackErrorCount);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RBElectronics(void *p) {
      delete ((::RBElectronics*)p);
   }
   static void deleteArray_RBElectronics(void *p) {
      delete [] ((::RBElectronics*)p);
   }
   static void destruct_RBElectronics(void *p) {
      typedef ::RBElectronics current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RBElectronics

//______________________________________________________________________________
void RBSisTimestampUnpacker::Streamer(TBuffer &R__b)
{
   // Stream an object of class RBSisTimestampUnpacker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RBSisTimestampUnpacker::Class(),this);
   } else {
      R__b.WriteClassBuffer(RBSisTimestampUnpacker::Class(),this);
   }
}

//______________________________________________________________________________
void RBSisTimestampUnpacker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RBSisTimestampUnpacker.
      TClass *R__cl = ::RBSisTimestampUnpacker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimestamp", &fTimestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimestampKoreans", &fTimestampKoreans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      R__insp.GenericShowMembers("RBModuleUnpacker", ( ::RBModuleUnpacker *) (this ), false);
      RBElectronics::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RBSisTimestampUnpacker(void *p) {
      delete ((::RBSisTimestampUnpacker*)p);
   }
   static void deleteArray_RBSisTimestampUnpacker(void *p) {
      delete [] ((::RBSisTimestampUnpacker*)p);
   }
   static void destruct_RBSisTimestampUnpacker(void *p) {
      typedef ::RBSisTimestampUnpacker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RBSisTimestampUnpacker

/********************************************************
* RBElectronicsDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRBElectronicsDict();

extern "C" void G__set_cpp_environmentRBElectronicsDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("RBElectronics.h");
  G__add_compiledheader("RBPedestalManager.h");
  G__add_compiledheader("RBSisTimestampUnpacker.h");
  G__add_compiledheader("RBHINPUnpacker.h");
  G__add_compiledheader("RBCCUSBPacket.h");
  G__add_compiledheader("RBCAEN7xxUnpacker.h");
  G__add_compiledheader("RBUSBStackMarker.h");
  G__add_compiledheader("RBTimestamp.h");
  G__add_compiledheader("RBPh7xxUnpacker.h");
  G__add_compiledheader("RBUSBStack.h");
  G__add_compiledheader("RBModuleUnpacker.h");
  G__add_compiledheader("RBCAEN1x90Unpacker.h");
  G__cpp_reset_tagtableRBElectronicsDict();
}
#include <new>
extern "C" int G__cpp_dllrevRBElectronicsDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* RBElectronics */
static int G__RBElectronicsDict_471_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBElectronics*) G__getstructoffset())->InitClass();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBElectronics*) G__getstructoffset())->InitBranch((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBElectronics*) G__getstructoffset())->InitTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RBElectronics*) G__getstructoffset())->Unpack((UShort_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RBElectronics*) G__getstructoffset())->Unpack((UShort_t*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RBElectronics*) G__getstructoffset())->Unpack(*(vector<UShort_t>*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RBElectronics*) G__getstructoffset())->DecodeVSN((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((RBElectronics*) G__getstructoffset())->GetBranchName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RBElectronics*) G__getstructoffset())->GetEnabled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RBElectronics*) G__getstructoffset())->GetFillData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RBElectronics*) G__getstructoffset())->GetMergedID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RBElectronics*) G__getstructoffset())->GetVSN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((RBElectronics*) G__getstructoffset())->GetUnpackError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RBElectronics*) G__getstructoffset())->GetUnpackErrorCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBElectronics*) G__getstructoffset())->SetBranchName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBElectronics*) G__getstructoffset())->SetEnabled((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBElectronics*) G__getstructoffset())->SetFillData((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBElectronics*) G__getstructoffset())->SetGeo((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBElectronics*) G__getstructoffset())->SetMergedID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBElectronics*) G__getstructoffset())->SetUnpackError((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((RBElectronics*) G__getstructoffset())->GetData((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RBElectronics*) G__getstructoffset())->GetDataf((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBElectronics*) G__getstructoffset())->PrintSummary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RBElectronics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBElectronics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RBElectronics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RBElectronics::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBElectronics*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBElectronics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBElectronics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBElectronics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_471_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBElectronics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RBElectronics G__TRBElectronics;
static int G__RBElectronicsDict_471_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RBElectronics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RBElectronics*) (soff+(sizeof(RBElectronics)*i)))->~G__TRBElectronics();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RBElectronics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RBElectronics*) (soff))->~G__TRBElectronics();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RBElectronicsDict_471_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBElectronics* dest = (RBElectronics*) G__getstructoffset();
   *dest = *(RBElectronics*) libp->para[0].ref;
   const RBElectronics& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RBSisTimestampUnpacker */
static int G__RBElectronicsDict_496_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBSisTimestampUnpacker* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RBSisTimestampUnpacker((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) RBSisTimestampUnpacker((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBSisTimestampUnpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_496_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBSisTimestampUnpacker*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_496_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((RBSisTimestampUnpacker*) G__getstructoffset())->GetTimestamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_496_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RBSisTimestampUnpacker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_496_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBSisTimestampUnpacker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_496_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RBSisTimestampUnpacker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_496_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RBSisTimestampUnpacker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_496_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBSisTimestampUnpacker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_496_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBSisTimestampUnpacker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_496_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBSisTimestampUnpacker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_496_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBSisTimestampUnpacker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_496_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBSisTimestampUnpacker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RBElectronicsDict_496_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RBSisTimestampUnpacker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RBSisTimestampUnpacker(*(RBSisTimestampUnpacker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBSisTimestampUnpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RBSisTimestampUnpacker G__TRBSisTimestampUnpacker;
static int G__RBElectronicsDict_496_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RBSisTimestampUnpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RBSisTimestampUnpacker*) (soff+(sizeof(RBSisTimestampUnpacker)*i)))->~G__TRBSisTimestampUnpacker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RBSisTimestampUnpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RBSisTimestampUnpacker*) (soff))->~G__TRBSisTimestampUnpacker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RBElectronicsDict_496_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBSisTimestampUnpacker* dest = (RBSisTimestampUnpacker*) G__getstructoffset();
   *dest = *(RBSisTimestampUnpacker*) libp->para[0].ref;
   const RBSisTimestampUnpacker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RBHINPHit */
static int G__RBElectronicsDict_498_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBHINPHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBHINPHit[n];
     } else {
       p = new((void*) gvp) RBHINPHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBHINPHit;
     } else {
       p = new((void*) gvp) RBHINPHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBHINPHit*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBHINPHit*) G__getstructoffset())->Set(
(UShort_t) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (UShort_t) G__int(libp->para[3])
, (UShort_t) G__int(libp->para[4]), (UShort_t) G__int(libp->para[5])
, (UShort_t) G__int(libp->para[6]), (UShort_t) G__int(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((RBHINPHit*) G__getstructoffset())->GetXLM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((RBHINPHit*) G__getstructoffset())->GetBank());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((RBHINPHit*) G__getstructoffset())->GetGlobalBank());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RBHINPHit*) G__getstructoffset())->GetChMismatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((RBHINPHit*) G__getstructoffset())->GetChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((RBHINPHit*) G__getstructoffset())->GetChip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((RBHINPHit*) G__getstructoffset())->GetEnergyLo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((RBHINPHit*) G__getstructoffset())->GetEnergyHi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((RBHINPHit*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RBHINPHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBHINPHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RBHINPHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RBHINPHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBHINPHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBHINPHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBHINPHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBHINPHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_498_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBHINPHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RBElectronicsDict_498_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RBHINPHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RBHINPHit(*(RBHINPHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RBHINPHit G__TRBHINPHit;
static int G__RBElectronicsDict_498_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RBHINPHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RBHINPHit*) (soff+(sizeof(RBHINPHit)*i)))->~G__TRBHINPHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RBHINPHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RBHINPHit*) (soff))->~G__TRBHINPHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RBElectronicsDict_498_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBHINPHit* dest = (RBHINPHit*) G__getstructoffset();
   *dest = *(RBHINPHit*) libp->para[0].ref;
   const RBHINPHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RBHINPUnpacker */
static int G__RBElectronicsDict_499_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBHINPUnpacker* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RBHINPUnpacker(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) RBHINPUnpacker(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPUnpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_499_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RBHINPUnpacker*) G__getstructoffset())->AddHit(
(Int_t) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (UShort_t) G__int(libp->para[3])
, (UShort_t) G__int(libp->para[4]), (UShort_t) G__int(libp->para[5])
, (UShort_t) G__int(libp->para[6]), (UShort_t) G__int(libp->para[7])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_499_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((RBHINPUnpacker*) G__getstructoffset())->GetBankMB((Int_t) G__int(libp->para[0]), (char) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_499_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((RBHINPUnpacker*) G__getstructoffset())->GetBankMBByIndex((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_499_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RBHINPUnpacker*) G__getstructoffset())->GetHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_499_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBHINPUnpacker*) G__getstructoffset())->SetBankMB((Int_t) G__int(libp->para[0]), (char) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_499_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RBHINPUnpacker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_499_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBHINPUnpacker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_499_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RBHINPUnpacker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_499_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RBHINPUnpacker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_499_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBHINPUnpacker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_499_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBHINPUnpacker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_499_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBHINPUnpacker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_499_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBHINPUnpacker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_499_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBHINPUnpacker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RBElectronicsDict_499_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RBHINPUnpacker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RBHINPUnpacker(*(RBHINPUnpacker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPUnpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RBHINPUnpacker G__TRBHINPUnpacker;
static int G__RBElectronicsDict_499_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RBHINPUnpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RBHINPUnpacker*) (soff+(sizeof(RBHINPUnpacker)*i)))->~G__TRBHINPUnpacker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RBHINPUnpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RBHINPUnpacker*) (soff))->~G__TRBHINPUnpacker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RBElectronicsDict_499_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBHINPUnpacker* dest = (RBHINPUnpacker*) G__getstructoffset();
   *dest = *(RBHINPUnpacker*) libp->para[0].ref;
   const RBHINPUnpacker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RBCAEN7xxUnpacker */
static int G__RBElectronicsDict_501_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBCAEN7xxUnpacker* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBCAEN7xxUnpacker[n];
     } else {
       p = new((void*) gvp) RBCAEN7xxUnpacker[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBCAEN7xxUnpacker;
     } else {
       p = new((void*) gvp) RBCAEN7xxUnpacker;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN7xxUnpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_501_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBCAEN7xxUnpacker* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RBCAEN7xxUnpacker((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) RBCAEN7xxUnpacker((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN7xxUnpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_501_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 83, (long) ((RBCAEN7xxUnpacker*) G__getstructoffset())->GetData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_501_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RBCAEN7xxUnpacker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_501_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBCAEN7xxUnpacker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_501_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RBCAEN7xxUnpacker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_501_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RBCAEN7xxUnpacker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_501_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBCAEN7xxUnpacker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_501_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBCAEN7xxUnpacker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_501_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBCAEN7xxUnpacker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_501_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBCAEN7xxUnpacker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_501_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBCAEN7xxUnpacker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RBElectronicsDict_501_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RBCAEN7xxUnpacker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RBCAEN7xxUnpacker(*(RBCAEN7xxUnpacker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN7xxUnpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RBCAEN7xxUnpacker G__TRBCAEN7xxUnpacker;
static int G__RBElectronicsDict_501_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RBCAEN7xxUnpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RBCAEN7xxUnpacker*) (soff+(sizeof(RBCAEN7xxUnpacker)*i)))->~G__TRBCAEN7xxUnpacker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RBCAEN7xxUnpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RBCAEN7xxUnpacker*) (soff))->~G__TRBCAEN7xxUnpacker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RBElectronicsDict_501_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBCAEN7xxUnpacker* dest = (RBCAEN7xxUnpacker*) G__getstructoffset();
   *dest = *(RBCAEN7xxUnpacker*) libp->para[0].ref;
   const RBCAEN7xxUnpacker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RBUSBStackMarker */
static int G__RBElectronicsDict_502_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBUSBStackMarker* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RBUSBStackMarker((UShort_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) RBUSBStackMarker((UShort_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStackMarker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_502_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((RBUSBStackMarker*) G__getstructoffset())->GetMarker());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_502_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((RBUSBStackMarker*) G__getstructoffset())->GetTitle();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_502_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBUSBStackMarker*) G__getstructoffset())->SetTitle((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_502_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RBUSBStackMarker*) G__getstructoffset())->Unpack(*(vector<UShort_t>*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_502_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RBUSBStackMarker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_502_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBUSBStackMarker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_502_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RBUSBStackMarker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_502_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RBUSBStackMarker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_502_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBUSBStackMarker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_502_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBUSBStackMarker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_502_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBUSBStackMarker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_502_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBUSBStackMarker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_502_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBUSBStackMarker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RBElectronicsDict_502_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RBUSBStackMarker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RBUSBStackMarker(*(RBUSBStackMarker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStackMarker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RBUSBStackMarker G__TRBUSBStackMarker;
static int G__RBElectronicsDict_502_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RBUSBStackMarker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RBUSBStackMarker*) (soff+(sizeof(RBUSBStackMarker)*i)))->~G__TRBUSBStackMarker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RBUSBStackMarker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RBUSBStackMarker*) (soff))->~G__TRBUSBStackMarker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RBElectronicsDict_502_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBUSBStackMarker* dest = (RBUSBStackMarker*) G__getstructoffset();
   *dest = *(RBUSBStackMarker*) libp->para[0].ref;
   const RBUSBStackMarker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RBTimestamp */
static int G__RBElectronicsDict_503_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBTimestamp* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RBTimestamp((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) RBTimestamp((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBTimestamp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_503_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((RBTimestamp*) G__getstructoffset())->GetTimestamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_503_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RBTimestamp::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_503_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBTimestamp::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_503_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RBTimestamp::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_503_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RBTimestamp::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_503_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBTimestamp*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_503_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBTimestamp::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_503_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBTimestamp::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_503_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBTimestamp::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_503_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBTimestamp::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RBElectronicsDict_503_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RBTimestamp* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RBTimestamp(*(RBTimestamp*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBTimestamp));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RBTimestamp G__TRBTimestamp;
static int G__RBElectronicsDict_503_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RBTimestamp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RBTimestamp*) (soff+(sizeof(RBTimestamp)*i)))->~G__TRBTimestamp();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RBTimestamp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RBTimestamp*) (soff))->~G__TRBTimestamp();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RBElectronicsDict_503_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBTimestamp* dest = (RBTimestamp*) G__getstructoffset();
   *dest = *(RBTimestamp*) libp->para[0].ref;
   const RBTimestamp& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RBPh7xxUnpacker */
static int G__RBElectronicsDict_504_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBPh7xxUnpacker* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBPh7xxUnpacker[n];
     } else {
       p = new((void*) gvp) RBPh7xxUnpacker[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBPh7xxUnpacker;
     } else {
       p = new((void*) gvp) RBPh7xxUnpacker;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBPh7xxUnpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_504_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBPh7xxUnpacker* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RBPh7xxUnpacker((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) RBPh7xxUnpacker((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBPh7xxUnpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_504_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RBPh7xxUnpacker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_504_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBPh7xxUnpacker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_504_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RBPh7xxUnpacker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_504_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RBPh7xxUnpacker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_504_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBPh7xxUnpacker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_504_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBPh7xxUnpacker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_504_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBPh7xxUnpacker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_504_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBPh7xxUnpacker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_504_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBPh7xxUnpacker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RBElectronicsDict_504_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RBPh7xxUnpacker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RBPh7xxUnpacker(*(RBPh7xxUnpacker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBPh7xxUnpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RBPh7xxUnpacker G__TRBPh7xxUnpacker;
static int G__RBElectronicsDict_504_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RBPh7xxUnpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RBPh7xxUnpacker*) (soff+(sizeof(RBPh7xxUnpacker)*i)))->~G__TRBPh7xxUnpacker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RBPh7xxUnpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RBPh7xxUnpacker*) (soff))->~G__TRBPh7xxUnpacker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RBElectronicsDict_504_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBPh7xxUnpacker* dest = (RBPh7xxUnpacker*) G__getstructoffset();
   *dest = *(RBPh7xxUnpacker*) libp->para[0].ref;
   const RBPh7xxUnpacker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RBUSBStack */
static int G__RBElectronicsDict_505_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBUSBStack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBUSBStack[n];
     } else {
       p = new((void*) gvp) RBUSBStack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBUSBStack;
     } else {
       p = new((void*) gvp) RBUSBStack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RBUSBStack*) G__getstructoffset())->AddStack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RBUSBStack*) G__getstructoffset())->AddToStack((Int_t) G__int(libp->para[0]), (RBUSBStackMarker*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RBUSBStack*) G__getstructoffset())->AddToStack((Int_t) G__int(libp->para[0]), (RBUSBStackMarker*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RBUSBStack*) G__getstructoffset())->AddToStack((Int_t) G__int(libp->para[0]), (RBElectronics*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RBUSBStack*) G__getstructoffset())->AddToStack((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (RBElectronics*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RBUSBStack*) G__getstructoffset())->AddToStack((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (RBElectronics*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RBUSBStack*) G__getstructoffset())->RemoveFromStack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RBUSBStack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBUSBStack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RBUSBStack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RBUSBStack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBUSBStack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBUSBStack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBUSBStack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBUSBStack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_505_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBUSBStack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RBElectronicsDict_505_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RBUSBStack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RBUSBStack(*(RBUSBStack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RBUSBStack G__TRBUSBStack;
static int G__RBElectronicsDict_505_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RBUSBStack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RBUSBStack*) (soff+(sizeof(RBUSBStack)*i)))->~G__TRBUSBStack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RBUSBStack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RBUSBStack*) (soff))->~G__TRBUSBStack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RBElectronicsDict_505_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBUSBStack* dest = (RBUSBStack*) G__getstructoffset();
   *dest = *(RBUSBStack*) libp->para[0].ref;
   const RBUSBStack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RBCAEN1x90Unpacker */
static int G__RBElectronicsDict_509_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBCAEN1x90Unpacker* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBCAEN1x90Unpacker[n];
     } else {
       p = new((void*) gvp) RBCAEN1x90Unpacker[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBCAEN1x90Unpacker;
     } else {
       p = new((void*) gvp) RBCAEN1x90Unpacker;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN1x90Unpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_509_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBCAEN1x90Unpacker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBCAEN1x90Unpacker(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) RBCAEN1x90Unpacker(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RBCAEN1x90Unpacker(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) RBCAEN1x90Unpacker(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN1x90Unpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_509_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBCAEN1x90Unpacker*) G__getstructoffset())->reportError((UInt_t) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_509_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RBCAEN1x90Unpacker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_509_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBCAEN1x90Unpacker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_509_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RBCAEN1x90Unpacker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_509_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RBCAEN1x90Unpacker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_509_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RBCAEN1x90Unpacker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_509_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBCAEN1x90Unpacker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_509_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBCAEN1x90Unpacker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_509_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RBCAEN1x90Unpacker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RBElectronicsDict_509_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RBCAEN1x90Unpacker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RBElectronicsDict_509_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RBCAEN1x90Unpacker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RBCAEN1x90Unpacker(*(RBCAEN1x90Unpacker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN1x90Unpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RBCAEN1x90Unpacker G__TRBCAEN1x90Unpacker;
static int G__RBElectronicsDict_509_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RBCAEN1x90Unpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RBCAEN1x90Unpacker*) (soff+(sizeof(RBCAEN1x90Unpacker)*i)))->~G__TRBCAEN1x90Unpacker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RBCAEN1x90Unpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RBCAEN1x90Unpacker*) (soff))->~G__TRBCAEN1x90Unpacker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RBElectronicsDict_509_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RBCAEN1x90Unpacker* dest = (RBCAEN1x90Unpacker*) G__getstructoffset();
   *dest = *(RBCAEN1x90Unpacker*) libp->para[0].ref;
   const RBCAEN1x90Unpacker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* RBElectronics */

/* RBSisTimestampUnpacker */

/* RBHINPHit */

/* RBHINPUnpacker */

/* RBCAEN7xxUnpacker */

/* RBUSBStackMarker */

/* RBTimestamp */

/* RBPh7xxUnpacker */

/* RBUSBStack */

/* RBCAEN1x90Unpacker */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRBElectronicsDict {
 public:
  G__Sizep2memfuncRBElectronicsDict(): p(&G__Sizep2memfuncRBElectronicsDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRBElectronicsDict::*p)();
};

size_t G__get_sizep2memfuncRBElectronicsDict()
{
  G__Sizep2memfuncRBElectronicsDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRBElectronicsDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBElectronics))) {
     RBElectronics *G__Lderived;
     G__Lderived=(RBElectronics*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBElectronics),G__get_linked_tagnum(&G__RBElectronicsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBSisTimestampUnpacker))) {
     RBSisTimestampUnpacker *G__Lderived;
     G__Lderived=(RBSisTimestampUnpacker*)0x1000;
     {
       RBModuleUnpacker *G__Lpbase=(RBModuleUnpacker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBSisTimestampUnpacker),G__get_linked_tagnum(&G__RBElectronicsDictLN_RBModuleUnpacker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RBElectronics *G__Lpbase=(RBElectronics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBSisTimestampUnpacker),G__get_linked_tagnum(&G__RBElectronicsDictLN_RBElectronics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBSisTimestampUnpacker),G__get_linked_tagnum(&G__RBElectronicsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPHit))) {
     RBHINPHit *G__Lderived;
     G__Lderived=(RBHINPHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPHit),G__get_linked_tagnum(&G__RBElectronicsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPUnpacker))) {
     RBHINPUnpacker *G__Lderived;
     G__Lderived=(RBHINPUnpacker*)0x1000;
     {
       RBModuleUnpacker *G__Lpbase=(RBModuleUnpacker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPUnpacker),G__get_linked_tagnum(&G__RBElectronicsDictLN_RBModuleUnpacker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RBElectronics *G__Lpbase=(RBElectronics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPUnpacker),G__get_linked_tagnum(&G__RBElectronicsDictLN_RBElectronics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPUnpacker),G__get_linked_tagnum(&G__RBElectronicsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN7xxUnpacker))) {
     RBCAEN7xxUnpacker *G__Lderived;
     G__Lderived=(RBCAEN7xxUnpacker*)0x1000;
     {
       RBModuleUnpacker *G__Lpbase=(RBModuleUnpacker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN7xxUnpacker),G__get_linked_tagnum(&G__RBElectronicsDictLN_RBModuleUnpacker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RBElectronics *G__Lpbase=(RBElectronics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN7xxUnpacker),G__get_linked_tagnum(&G__RBElectronicsDictLN_RBElectronics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN7xxUnpacker),G__get_linked_tagnum(&G__RBElectronicsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStackMarker))) {
     RBUSBStackMarker *G__Lderived;
     G__Lderived=(RBUSBStackMarker*)0x1000;
     {
       RBElectronics *G__Lpbase=(RBElectronics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStackMarker),G__get_linked_tagnum(&G__RBElectronicsDictLN_RBElectronics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStackMarker),G__get_linked_tagnum(&G__RBElectronicsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBTimestamp))) {
     RBTimestamp *G__Lderived;
     G__Lderived=(RBTimestamp*)0x1000;
     {
       RBElectronics *G__Lpbase=(RBElectronics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBTimestamp),G__get_linked_tagnum(&G__RBElectronicsDictLN_RBElectronics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBTimestamp),G__get_linked_tagnum(&G__RBElectronicsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBPh7xxUnpacker))) {
     RBPh7xxUnpacker *G__Lderived;
     G__Lderived=(RBPh7xxUnpacker*)0x1000;
     {
       RBCCUSBPacket *G__Lpbase=(RBCCUSBPacket*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBPh7xxUnpacker),G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCCUSBPacket),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RBElectronics *G__Lpbase=(RBElectronics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBPh7xxUnpacker),G__get_linked_tagnum(&G__RBElectronicsDictLN_RBElectronics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBPh7xxUnpacker),G__get_linked_tagnum(&G__RBElectronicsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStack))) {
     RBUSBStack *G__Lderived;
     G__Lderived=(RBUSBStack*)0x1000;
     {
       RBModuleUnpacker *G__Lpbase=(RBModuleUnpacker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStack),G__get_linked_tagnum(&G__RBElectronicsDictLN_RBModuleUnpacker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RBElectronics *G__Lpbase=(RBElectronics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStack),G__get_linked_tagnum(&G__RBElectronicsDictLN_RBElectronics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStack),G__get_linked_tagnum(&G__RBElectronicsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN1x90Unpacker))) {
     RBCAEN1x90Unpacker *G__Lderived;
     G__Lderived=(RBCAEN1x90Unpacker*)0x1000;
     {
       RBModuleUnpacker *G__Lpbase=(RBModuleUnpacker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN1x90Unpacker),G__get_linked_tagnum(&G__RBElectronicsDictLN_RBModuleUnpacker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RBElectronics *G__Lpbase=(RBElectronics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN1x90Unpacker),G__get_linked_tagnum(&G__RBElectronicsDictLN_RBElectronics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN1x90Unpacker),G__get_linked_tagnum(&G__RBElectronicsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRBElectronicsDict() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RBElectronicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RBElectronicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RBElectronicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RBElectronicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UShort_t>",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StackInfo",117,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStackcLcL_StackInfo),0,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStack));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* RBElectronics */
static void G__setup_memvarRBElectronics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBElectronics));
   { RBElectronics *p; p=(RBElectronics*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TString),-1,-1,4,"fBranchName=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGeo=",0,"! Module slot number or geographical address.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"kMergedID=",0,"! The merged data ID.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFill=",0,"! Fill data when unpacking.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fEnabled=",0,"! Is the module in the data stream?");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fUnpackError=",0,"Unpacking error code.");
   G__memvar_setup((void*)((long)(&p->fUnpackErrorCount)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fUnpackErrorCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RBSisTimestampUnpacker */
static void G__setup_memvarRBSisTimestampUnpacker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBSisTimestampUnpacker));
   { RBSisTimestampUnpacker *p; p=(RBSisTimestampUnpacker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fTimestamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fTimestampKoreans=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TTree),-1,-1,4,"fChain=",0,"! Pointer to current TTree or TChain");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrent=",0,"! Current Tree number in a TChain");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RBHINPHit */
static void G__setup_memvarRBHINPHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPHit));
   { RBHINPHit *p; p=(RBHINPHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fXLMIndex=",0,"XLM index");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fBank=",0,"XLM BANK (A=0, B=1)");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fGlobalBank=",0,"XLM global BANK ID");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fChMismatch=",0,"XLM/FADC ch mismatch");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fChannel=",0,"chip channel");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fChip=",0,"chip number");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fEnergyHi=",0,"raw energy");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fEnergyLo=",0,"raw energy");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fTime=",0,"raw time");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RBHINPUnpacker */
static void G__setup_memvarRBHINPUnpacker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPUnpacker));
   { RBHINPUnpacker *p; p=(RBHINPUnpacker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fnMBs=",0,"! Number of total MBs for all XLMs to be read.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUsingSISFADC=",0,"! Using SIS FADC for digitization?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFoundBeginMarker=",0,"! Found \"begin\" marker flag.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fReportNExtraMarkers=",0,"!");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fNUnpackedEvents=",0,"!");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fTotalUnpackedData=",0,"!  ");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fFaultyCount=",0,"! ");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fErrorCount=",0,"!    ");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fBankMB[4][2]=",0,"! MB # to XLM BANK");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TString),-1,-1,4,"fChName=",0,"! Channel label");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fnCh=",0,"!");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fTimestamp[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fGroupMask=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fData[4][32]=",0,"! XLM data");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TClonesArray),-1,-1,4,"fHits=",0,"Collection of triggered HINP channels.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TClonesArray),-1,-2,4,"fgHits=",0,"Collection of triggered HINP channels.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TTree),-1,-1,4,"fChain=",0,"! Pointer to current TTree or TChain");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrent=",0,"! Current Tree number in a TChain");
   G__memvar_setup((void*)((long)(&p->b_fTimestamp)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TBranch),-1,-1,1,"b_fTimestamp=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fGroupMask)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TBranch),-1,-1,1,"b_fGroupMask=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TBranch),-1,-1,1,"b_fHits=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RBCAEN7xxUnpacker */
static void G__setup_memvarRBCAEN7xxUnpacker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN7xxUnpacker));
   { RBCAEN7xxUnpacker *p; p=(RBCAEN7xxUnpacker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TString),-1,-1,4,"fChName=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fnCh=",0,"!");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fData[32]=",0,"!");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fTotalUnpackedCount=",0,"!");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fOverflowCount=",0,"!");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fVSNMismatchCount=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TTree),-1,-1,4,"fChain=",0,"! Pointer to current TTree or TChain");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrent=",0,"! Current Tree number in a TChain");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RBUSBStackMarker */
static void G__setup_memvarRBUSBStackMarker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStackMarker));
   { RBUSBStackMarker *p; p=(RBUSBStackMarker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fMarker=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TString),-1,-1,4,"fTitle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RBTimestamp */
static void G__setup_memvarRBTimestamp(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBTimestamp));
   { RBTimestamp *p; p=(RBTimestamp*)0x1000; if (p) { }
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fTimestamp=",0,"Timestamp value.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TTree),-1,-1,4,"fChain=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fTimestamp)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TBranch),-1,-1,1,"b_fTimestamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RBPh7xxUnpacker */
static void G__setup_memvarRBPh7xxUnpacker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBPh7xxUnpacker));
   { RBPh7xxUnpacker *p; p=(RBPh7xxUnpacker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TString),-1,-1,4,"fChName=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fnCh=",0,"!");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fData[16]=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TTree),-1,-1,4,"fChain=",0,"! Pointer to current TTree or TChain");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrent=",0,"! Current Tree number in a TChain");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RBUSBStack */
static void G__setup_memvarRBUSBStack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStack));
   { RBUSBStack *p; p=(RBUSBStack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fEventCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fWordsCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fVsnErrorCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fBufferMismatchCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_RBTimestamp),-1,-1,4,"fUSBTimestamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TList),-1,-1,4,"fStacks=",0,"Array of stacks.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TTree),-1,-1,4,"fChain=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RBCAEN1x90Unpacker */
static void G__setup_memvarRBCAEN1x90Unpacker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN1x90Unpacker));
   { RBCAEN1x90Unpacker *p; p=(RBCAEN1x90Unpacker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDepth=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRefChannel=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fnChannels=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fChanmask=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fChanshift=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDatamask=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fChsToNs=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TString),-1,-1,4,"fChName=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fnCh=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTimes[128]=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TRandom3),-1,-1,4,"fRandomGen=",0,"!");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fTotalUnpackedData=",0,"!  ");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fErrorCount=",0,"!");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fNoReferenceCount=",0,"!");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fVSNMismatchCount=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TTree),-1,-1,4,"fChain=",0,"! Pointer to current TTree or TChain");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrent=",0,"! Current Tree number in a TChain");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRBElectronicsDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncRBElectronics(void) {
   /* RBElectronics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBElectronics));
   G__memfunc_setup("InitClass",906,G__RBElectronicsDict_471_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("InitBranch",994,G__RBElectronicsDict_471_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("InitTree",804,G__RBElectronicsDict_471_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Unpack",610,G__RBElectronicsDict_471_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "R - 'UShort_t' 0 - pEvent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Unpack",610,G__RBElectronicsDict_471_0_5, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"R - 'UShort_t' 0 - pEvent h - 'UInt_t' 0 - offset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Unpack",610,G__RBElectronicsDict_471_0_6, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - event h - 'UInt_t' 0 - offset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DecodeVSN",827,G__RBElectronicsDict_471_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - header", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBranchName",1263,G__RBElectronicsDict_471_0_8, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnabled",971,G__RBElectronicsDict_471_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFillData",1057,G__RBElectronicsDict_471_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMergedID",1025,G__RBElectronicsDict_471_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVSN",535,G__RBElectronicsDict_471_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnpackError",1420,G__RBElectronicsDict_471_0_13, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnpackErrorCount",1941,G__RBElectronicsDict_471_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranchName",1275,G__RBElectronicsDict_471_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - bname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnabled",983,G__RBElectronicsDict_471_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - enabled", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFillData",1069,G__RBElectronicsDict_471_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - fill", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeo",583,G__RBElectronicsDict_471_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - geo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMergedID",1037,G__RBElectronicsDict_471_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUnpackError",1432,G__RBElectronicsDict_471_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,G__RBElectronicsDict_471_0_21, 115, -1, G__defined_typename("Short_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataf",768,G__RBElectronicsDict_471_0_22, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintSummary",1275,G__RBElectronicsDict_471_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RBElectronicsDict_471_0_24, 85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RBElectronics::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RBElectronicsDict_471_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBElectronics::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RBElectronicsDict_471_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RBElectronics::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RBElectronicsDict_471_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RBElectronics::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RBElectronicsDict_471_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RBElectronicsDict_471_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBElectronics::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RBElectronicsDict_471_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBElectronics::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RBElectronicsDict_471_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBElectronics::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RBElectronicsDict_471_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBElectronics::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RBElectronics", 1421, G__RBElectronicsDict_471_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RBElectronicsDict_471_0_37, (int) ('u'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBElectronics), -1, 1, 1, 1, 1, 0, "u 'RBElectronics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRBSisTimestampUnpacker(void) {
   /* RBSisTimestampUnpacker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBSisTimestampUnpacker));
   G__memfunc_setup("RBSisTimestampUnpacker",2224,G__RBElectronicsDict_496_0_1, 105, G__get_linked_tagnum(&G__RBElectronicsDictLN_RBSisTimestampUnpacker), -1, 0, 1, 1, 1, 0, "C - - 10 - chName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unpack",610,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - event h - 'UInt_t' 0 - offset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitBranch",994,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,G__RBElectronicsDict_496_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitClass",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitTree",804,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTimestamp",1236,G__RBElectronicsDict_496_0_7, 109, -1, G__defined_typename("ULong64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RBElectronicsDict_496_0_8, 85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RBSisTimestampUnpacker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RBElectronicsDict_496_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBSisTimestampUnpacker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RBElectronicsDict_496_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RBSisTimestampUnpacker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RBElectronicsDict_496_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RBSisTimestampUnpacker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RBElectronicsDict_496_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RBElectronicsDict_496_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBSisTimestampUnpacker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RBElectronicsDict_496_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBSisTimestampUnpacker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RBElectronicsDict_496_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBSisTimestampUnpacker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RBElectronicsDict_496_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBSisTimestampUnpacker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RBSisTimestampUnpacker", 2224, G__RBElectronicsDict_496_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__RBElectronicsDictLN_RBSisTimestampUnpacker), -1, 0, 1, 1, 1, 0, "u 'RBSisTimestampUnpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RBSisTimestampUnpacker", 2350, G__RBElectronicsDict_496_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RBElectronicsDict_496_0_22, (int) ('u'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBSisTimestampUnpacker), -1, 1, 1, 1, 1, 0, "u 'RBSisTimestampUnpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRBHINPHit(void) {
   /* RBHINPHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPHit));
   G__memfunc_setup("RBHINPHit",744,G__RBElectronicsDict_498_0_1, 105, G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__RBElectronicsDict_498_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__RBElectronicsDict_498_0_3, 121, -1, -1, 0, 8, 1, 1, 0, 
"r - 'UShort_t' 0 - xlm r - 'UShort_t' 0 - bank "
"g - 'Bool_t' 0 - mismatch r - 'UShort_t' 0 - ch "
"r - 'UShort_t' 0 - chip r - 'UShort_t' 0 - Hi "
"r - 'UShort_t' 0 - Lo r - 'UShort_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXLM",529,G__RBElectronicsDict_498_0_4, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBank",668,G__RBElectronicsDict_498_0_5, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGlobalBank",1261,G__RBElectronicsDict_498_0_6, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChMismatch",1281,G__RBElectronicsDict_498_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannel",985,G__RBElectronicsDict_498_0_8, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChip",676,G__RBElectronicsDict_498_0_9, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyLo",1093,G__RBElectronicsDict_498_0_10, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyHi",1083,G__RBElectronicsDict_498_0_11, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__RBElectronicsDict_498_0_12, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RBElectronicsDict_498_0_13, 85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RBHINPHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RBElectronicsDict_498_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBHINPHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RBElectronicsDict_498_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RBHINPHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RBElectronicsDict_498_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RBHINPHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RBElectronicsDict_498_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RBElectronicsDict_498_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBHINPHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RBElectronicsDict_498_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBHINPHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RBElectronicsDict_498_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBHINPHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RBElectronicsDict_498_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBHINPHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RBHINPHit", 744, G__RBElectronicsDict_498_0_25, (int) ('i'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPHit), -1, 0, 1, 1, 1, 0, "u 'RBHINPHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RBHINPHit", 870, G__RBElectronicsDict_498_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RBElectronicsDict_498_0_27, (int) ('u'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPHit), -1, 1, 1, 1, 1, 0, "u 'RBHINPHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRBHINPUnpacker(void) {
   /* RBHINPUnpacker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPUnpacker));
   G__memfunc_setup("RBHINPUnpacker",1276,G__RBElectronicsDict_499_0_1, 105, G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPUnpacker), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - nMBs "
"g - 'Bool_t' 0 - usingFADC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHit",558,G__RBElectronicsDict_499_0_2, 85, G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPHit), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - xlm r - 'UShort_t' 0 - bank "
"g - 'Bool_t' 0 - mismatch r - 'UShort_t' 0 - ch "
"r - 'UShort_t' 0 - chip r - 'UShort_t' 0 - Hi "
"r - 'UShort_t' 0 - Lo r - 'UShort_t' 0 - time", "Add a hit to the clones array.", (void*) NULL, 0);
   G__memfunc_setup("Unpack",610,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - event h - 'UInt_t' 0 - offset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitClass",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitBranch",994,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitTree",804,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBankMB",811,G__RBElectronicsDict_499_0_8, 114, -1, G__defined_typename("UShort_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - xlm c - - 0 - bank", "Get the BANK MB Id.", (void*) NULL, 0);
   G__memfunc_setup("GetBankMBByIndex",1502,G__RBElectronicsDict_499_0_9, 114, -1, G__defined_typename("UShort_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - xlm i - 'Int_t' 0 - bank", "Get the BANK MB Id.", (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__RBElectronicsDict_499_0_10, 85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", "Get the \"hits\" array.", (void*) NULL, 0);
   G__memfunc_setup("SetBankMB",823,G__RBElectronicsDict_499_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - xlm c - - 0 - bank "
"i - 'Int_t' 0 - mb", "Set the BANK MB Id.", (void*) NULL, 0);
   G__memfunc_setup("PrintSummary",1275,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RBElectronicsDict_499_0_13, 85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RBHINPUnpacker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RBElectronicsDict_499_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBHINPUnpacker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RBElectronicsDict_499_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RBHINPUnpacker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RBElectronicsDict_499_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RBHINPUnpacker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RBElectronicsDict_499_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RBElectronicsDict_499_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBHINPUnpacker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RBElectronicsDict_499_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBHINPUnpacker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RBElectronicsDict_499_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBHINPUnpacker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RBElectronicsDict_499_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBHINPUnpacker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RBHINPUnpacker", 1276, G__RBElectronicsDict_499_0_25, (int) ('i'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPUnpacker), -1, 0, 1, 1, 1, 0, "u 'RBHINPUnpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RBHINPUnpacker", 1402, G__RBElectronicsDict_499_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RBElectronicsDict_499_0_27, (int) ('u'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBHINPUnpacker), -1, 1, 1, 1, 1, 0, "u 'RBHINPUnpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRBCAEN7xxUnpacker(void) {
   /* RBCAEN7xxUnpacker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN7xxUnpacker));
   G__memfunc_setup("RBCAEN7xxUnpacker",1547,G__RBElectronicsDict_501_0_1, 105, G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN7xxUnpacker), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RBCAEN7xxUnpacker",1547,G__RBElectronicsDict_501_0_2, 105, G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN7xxUnpacker), -1, 0, 1, 1, 1, 0, "C - - 10 - chName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecodeVSN",827,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - header", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitClass",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitBranch",994,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitTree",804,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Unpack",610,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - event h - 'UInt_t' 0 - offset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetData",666,G__RBElectronicsDict_501_0_9, 83, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Short_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintSummary",1275,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RBElectronicsDict_501_0_12, 85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RBCAEN7xxUnpacker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RBElectronicsDict_501_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBCAEN7xxUnpacker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RBElectronicsDict_501_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RBCAEN7xxUnpacker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RBElectronicsDict_501_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RBCAEN7xxUnpacker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RBElectronicsDict_501_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RBElectronicsDict_501_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBCAEN7xxUnpacker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RBElectronicsDict_501_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBCAEN7xxUnpacker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RBElectronicsDict_501_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBCAEN7xxUnpacker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RBElectronicsDict_501_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBCAEN7xxUnpacker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RBCAEN7xxUnpacker", 1547, G__RBElectronicsDict_501_0_24, (int) ('i'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN7xxUnpacker), -1, 0, 1, 1, 1, 0, "u 'RBCAEN7xxUnpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RBCAEN7xxUnpacker", 1673, G__RBElectronicsDict_501_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RBElectronicsDict_501_0_26, (int) ('u'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN7xxUnpacker), -1, 1, 1, 1, 1, 0, "u 'RBCAEN7xxUnpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRBUSBStackMarker(void) {
   /* RBUSBStackMarker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStackMarker));
   G__memfunc_setup("RBUSBStackMarker",1494,G__RBElectronicsDict_502_0_1, 105, G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStackMarker), -1, 0, 2, 1, 1, 0, 
"r - 'UShort_t' 0 - marker C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMarker",898,G__RBElectronicsDict_502_0_2, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTitle",802,G__RBElectronicsDict_502_0_3, 117, G__get_linked_tagnum(&G__RBElectronicsDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTitle",814,G__RBElectronicsDict_502_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitClass",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitBranch",994,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitTree",804,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Unpack",610,G__RBElectronicsDict_502_0_8, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - event i - 'Int_t' 0 - offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RBElectronicsDict_502_0_9, 85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RBUSBStackMarker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RBElectronicsDict_502_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBUSBStackMarker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RBElectronicsDict_502_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RBUSBStackMarker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RBElectronicsDict_502_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RBUSBStackMarker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RBElectronicsDict_502_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RBElectronicsDict_502_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBUSBStackMarker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RBElectronicsDict_502_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBUSBStackMarker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RBElectronicsDict_502_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBUSBStackMarker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RBElectronicsDict_502_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBUSBStackMarker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RBUSBStackMarker", 1494, G__RBElectronicsDict_502_0_21, (int) ('i'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStackMarker), -1, 0, 1, 1, 1, 0, "u 'RBUSBStackMarker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RBUSBStackMarker", 1620, G__RBElectronicsDict_502_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RBElectronicsDict_502_0_23, (int) ('u'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStackMarker), -1, 1, 1, 1, 1, 0, "u 'RBUSBStackMarker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRBTimestamp(void) {
   /* RBTimestamp */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBTimestamp));
   G__memfunc_setup("RBTimestamp",1096,G__RBElectronicsDict_503_0_1, 105, G__get_linked_tagnum(&G__RBElectronicsDictLN_RBTimestamp), -1, 0, 1, 1, 1, 0, "C - - 10 - bName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimestamp",1236,G__RBElectronicsDict_503_0_2, 109, -1, G__defined_typename("ULong64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitClass",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitBranch",994,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitTree",804,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Unpack",610,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "R - 'UShort_t' 0 - pEvent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RBElectronicsDict_503_0_8, 85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RBTimestamp::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RBElectronicsDict_503_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBTimestamp::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RBElectronicsDict_503_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RBTimestamp::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RBElectronicsDict_503_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RBTimestamp::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RBElectronicsDict_503_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RBElectronicsDict_503_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBTimestamp::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RBElectronicsDict_503_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBTimestamp::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RBElectronicsDict_503_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBTimestamp::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RBElectronicsDict_503_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBTimestamp::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RBTimestamp", 1096, G__RBElectronicsDict_503_0_20, (int) ('i'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBTimestamp), -1, 0, 1, 1, 1, 0, "u 'RBTimestamp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RBTimestamp", 1222, G__RBElectronicsDict_503_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RBElectronicsDict_503_0_22, (int) ('u'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBTimestamp), -1, 1, 1, 1, 1, 0, "u 'RBTimestamp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRBPh7xxUnpacker(void) {
   /* RBPh7xxUnpacker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBPh7xxUnpacker));
   G__memfunc_setup("RBPh7xxUnpacker",1452,G__RBElectronicsDict_504_0_1, 105, G__get_linked_tagnum(&G__RBElectronicsDictLN_RBPh7xxUnpacker), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RBPh7xxUnpacker",1452,G__RBElectronicsDict_504_0_2, 105, G__get_linked_tagnum(&G__RBElectronicsDictLN_RBPh7xxUnpacker), -1, 0, 1, 1, 1, 0, "C - - 10 - chName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitClass",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitBranch",994,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitTree",804,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Unpack",610,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "R - 'UShort_t' 0 - pEvent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RBElectronicsDict_504_0_8, 85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RBPh7xxUnpacker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RBElectronicsDict_504_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBPh7xxUnpacker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RBElectronicsDict_504_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RBPh7xxUnpacker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RBElectronicsDict_504_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RBPh7xxUnpacker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RBElectronicsDict_504_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RBElectronicsDict_504_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBPh7xxUnpacker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RBElectronicsDict_504_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBPh7xxUnpacker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RBElectronicsDict_504_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBPh7xxUnpacker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RBElectronicsDict_504_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBPh7xxUnpacker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RBPh7xxUnpacker", 1452, G__RBElectronicsDict_504_0_20, (int) ('i'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBPh7xxUnpacker), -1, 0, 1, 1, 1, 0, "u 'RBPh7xxUnpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RBPh7xxUnpacker", 1578, G__RBElectronicsDict_504_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RBElectronicsDict_504_0_22, (int) ('u'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBPh7xxUnpacker), -1, 1, 1, 1, 1, 0, "u 'RBPh7xxUnpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRBUSBStack(void) {
   /* RBUSBStack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStack));
   G__memfunc_setup("assembleEvent",1358,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStackcLcL_StackInfo), G__defined_typename("RBUSBStack::StackInfo"), 0, 2, 3, 4, 0, 
"R - 'UShort_t' 0 - p u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RBUSBStack",884,G__RBElectronicsDict_505_0_2, 105, G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStack",767,G__RBElectronicsDict_505_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToStack",962,G__RBElectronicsDict_505_0_4, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - stackIdx U 'RBUSBStackMarker' - 0 - marker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToStack",962,G__RBElectronicsDict_505_0_5, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - stackIdx U 'RBUSBStackMarker' - 0 - marker "
"i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToStack",962,G__RBElectronicsDict_505_0_6, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - stackIdx U 'RBElectronics' - 0 - module", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToStack",962,G__RBElectronicsDict_505_0_7, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - stackIdx i - 'Int_t' 0 - geo "
"U 'RBElectronics' - 0 - module", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToStack",962,G__RBElectronicsDict_505_0_8, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - stackIdx i - 'Int_t' 0 - geo "
"U 'RBElectronics' - 0 - module i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveFromStack",1528,G__RBElectronicsDict_505_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitClass",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitBranch",994,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitTree",804,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Unpack",610,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"R - 'UShort_t' 0 - pEvent h - 'UInt_t' 0 - offset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintSummary",1275,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RBElectronicsDict_505_0_16, 85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RBUSBStack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RBElectronicsDict_505_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBUSBStack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RBElectronicsDict_505_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RBUSBStack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RBElectronicsDict_505_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RBUSBStack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RBElectronicsDict_505_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RBElectronicsDict_505_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBUSBStack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RBElectronicsDict_505_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBUSBStack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RBElectronicsDict_505_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBUSBStack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RBElectronicsDict_505_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBUSBStack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RBUSBStack", 884, G__RBElectronicsDict_505_0_28, (int) ('i'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStack), -1, 0, 1, 1, 1, 0, "u 'RBUSBStack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RBUSBStack", 1010, G__RBElectronicsDict_505_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RBElectronicsDict_505_0_30, (int) ('u'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBUSBStack), -1, 1, 1, 1, 1, 0, "u 'RBUSBStack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRBCAEN1x90Unpacker(void) {
   /* RBCAEN1x90Unpacker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN1x90Unpacker));
   G__memfunc_setup("RBCAEN1x90Unpacker",1526,G__RBElectronicsDict_509_0_1, 105, G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN1x90Unpacker), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RBCAEN1x90Unpacker",1526,G__RBElectronicsDict_509_0_2, 105, G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN1x90Unpacker), -1, 0, 5, 1, 1, 0, 
"C - - 10 - chName i - 'Int_t' 0 - depth "
"i - 'Int_t' 0 - refCh i - 'Int_t' 0 - nChannels "
"d - 'Double_t' 0 '1' chsToNs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecodeVSN",827,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - header", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reportError",1190,G__RBElectronicsDict_509_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - errorWord i - - 0 - slot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitClass",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitBranch",994,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitTree",804,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Unpack",610,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - event h - 'UInt_t' 0 - offset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetData",666,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Short_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataf",768,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintSummary",1275,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RBElectronicsDict_509_0_13, 85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RBCAEN1x90Unpacker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RBElectronicsDict_509_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBCAEN1x90Unpacker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RBElectronicsDict_509_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RBCAEN1x90Unpacker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RBElectronicsDict_509_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RBCAEN1x90Unpacker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RBElectronicsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RBElectronicsDict_509_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RBElectronicsDict_509_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBCAEN1x90Unpacker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RBElectronicsDict_509_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBCAEN1x90Unpacker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RBElectronicsDict_509_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RBCAEN1x90Unpacker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RBElectronicsDict_509_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RBCAEN1x90Unpacker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RBCAEN1x90Unpacker", 1526, G__RBElectronicsDict_509_0_25, (int) ('i'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN1x90Unpacker), -1, 0, 1, 1, 1, 0, "u 'RBCAEN1x90Unpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RBCAEN1x90Unpacker", 1652, G__RBElectronicsDict_509_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RBElectronicsDict_509_0_27, (int) ('u'), G__get_linked_tagnum(&G__RBElectronicsDictLN_RBCAEN1x90Unpacker), -1, 1, 1, 1, 1, 0, "u 'RBCAEN1x90Unpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRBElectronicsDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRBElectronicsDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRBElectronicsDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RBElectronicsDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_RBElectronics = { "RBElectronics" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_RBModuleUnpacker = { "RBModuleUnpacker" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_RBSisTimestampUnpacker = { "RBSisTimestampUnpacker" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_RBHINPHit = { "RBHINPHit" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_RBHINPUnpacker = { "RBHINPUnpacker" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_RBCCUSBPacket = { "RBCCUSBPacket" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_RBCAEN7xxUnpacker = { "RBCAEN7xxUnpacker" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_RBUSBStackMarker = { "RBUSBStackMarker" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_RBTimestamp = { "RBTimestamp" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_RBPh7xxUnpacker = { "RBPh7xxUnpacker" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_RBUSBStack = { "RBUSBStack" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_RBUSBStackcLcL_StackInfo = { "RBUSBStack::_StackInfo" , 115 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G__RBElectronicsDictLN_RBCAEN1x90Unpacker = { "RBCAEN1x90Unpacker" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRBElectronicsDict() {
  G__RBElectronicsDictLN_TClass.tagnum = -1 ;
  G__RBElectronicsDictLN_TBuffer.tagnum = -1 ;
  G__RBElectronicsDictLN_TMemberInspector.tagnum = -1 ;
  G__RBElectronicsDictLN_TObject.tagnum = -1 ;
  G__RBElectronicsDictLN_TString.tagnum = -1 ;
  G__RBElectronicsDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__RBElectronicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__RBElectronicsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RBElectronicsDictLN_TList.tagnum = -1 ;
  G__RBElectronicsDictLN_TClonesArray.tagnum = -1 ;
  G__RBElectronicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__RBElectronicsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RBElectronicsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__RBElectronicsDictLN_TTree.tagnum = -1 ;
  G__RBElectronicsDictLN_TBranch.tagnum = -1 ;
  G__RBElectronicsDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__RBElectronicsDictLN_RBElectronics.tagnum = -1 ;
  G__RBElectronicsDictLN_RBModuleUnpacker.tagnum = -1 ;
  G__RBElectronicsDictLN_RBSisTimestampUnpacker.tagnum = -1 ;
  G__RBElectronicsDictLN_RBHINPHit.tagnum = -1 ;
  G__RBElectronicsDictLN_RBHINPUnpacker.tagnum = -1 ;
  G__RBElectronicsDictLN_RBCCUSBPacket.tagnum = -1 ;
  G__RBElectronicsDictLN_RBCAEN7xxUnpacker.tagnum = -1 ;
  G__RBElectronicsDictLN_RBUSBStackMarker.tagnum = -1 ;
  G__RBElectronicsDictLN_RBTimestamp.tagnum = -1 ;
  G__RBElectronicsDictLN_RBPh7xxUnpacker.tagnum = -1 ;
  G__RBElectronicsDictLN_RBUSBStack.tagnum = -1 ;
  G__RBElectronicsDictLN_RBUSBStackcLcL_StackInfo.tagnum = -1 ;
  G__RBElectronicsDictLN_TRandom3.tagnum = -1 ;
  G__RBElectronicsDictLN_RBCAEN1x90Unpacker.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRBElectronicsDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_TString);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_TList);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_RBElectronics),sizeof(RBElectronics),-1,291843,(char*)NULL,G__setup_memvarRBElectronics,G__setup_memfuncRBElectronics);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_RBModuleUnpacker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_RBSisTimestampUnpacker),sizeof(RBSisTimestampUnpacker),-1,324608,(char*)NULL,G__setup_memvarRBSisTimestampUnpacker,G__setup_memfuncRBSisTimestampUnpacker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_RBHINPHit),sizeof(RBHINPHit),-1,292096,(char*)NULL,G__setup_memvarRBHINPHit,G__setup_memfuncRBHINPHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_RBHINPUnpacker),sizeof(RBHINPUnpacker),-1,324608,(char*)NULL,G__setup_memvarRBHINPUnpacker,G__setup_memfuncRBHINPUnpacker);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_RBCCUSBPacket);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_RBCAEN7xxUnpacker),sizeof(RBCAEN7xxUnpacker),-1,324864,(char*)NULL,G__setup_memvarRBCAEN7xxUnpacker,G__setup_memfuncRBCAEN7xxUnpacker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_RBUSBStackMarker),sizeof(RBUSBStackMarker),-1,324608,(char*)NULL,G__setup_memvarRBUSBStackMarker,G__setup_memfuncRBUSBStackMarker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_RBTimestamp),sizeof(RBTimestamp),-1,324608,(char*)NULL,G__setup_memvarRBTimestamp,G__setup_memfuncRBTimestamp);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_RBPh7xxUnpacker),sizeof(RBPh7xxUnpacker),-1,324864,(char*)NULL,G__setup_memvarRBPh7xxUnpacker,G__setup_memfuncRBPh7xxUnpacker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_RBUSBStack),sizeof(RBUSBStack),-1,292096,(char*)NULL,G__setup_memvarRBUSBStack,G__setup_memfuncRBUSBStack);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_RBUSBStackcLcL_StackInfo);
   G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_TRandom3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RBElectronicsDictLN_RBCAEN1x90Unpacker),sizeof(RBCAEN1x90Unpacker),-1,324864,(char*)NULL,G__setup_memvarRBCAEN1x90Unpacker,G__setup_memfuncRBCAEN1x90Unpacker);
}
extern "C" void G__cpp_setupRBElectronicsDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupRBElectronicsDict()");
  G__set_cpp_environmentRBElectronicsDict();
  G__cpp_setup_tagtableRBElectronicsDict();

  G__cpp_setup_inheritanceRBElectronicsDict();

  G__cpp_setup_typetableRBElectronicsDict();

  G__cpp_setup_memvarRBElectronicsDict();

  G__cpp_setup_memfuncRBElectronicsDict();
  G__cpp_setup_globalRBElectronicsDict();
  G__cpp_setup_funcRBElectronicsDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRBElectronicsDict();
  return;
}
class G__cpp_setup_initRBElectronicsDict {
  public:
    G__cpp_setup_initRBElectronicsDict() { G__add_setup_func("RBElectronicsDict",(G__incsetup)(&G__cpp_setupRBElectronicsDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRBElectronicsDict() { G__remove_setup_func("RBElectronicsDict"); }
};
G__cpp_setup_initRBElectronicsDict G__cpp_setup_initializerRBElectronicsDict;

